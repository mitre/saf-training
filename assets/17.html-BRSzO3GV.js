import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,o as a}from"./app-Cw6QY_M_.js";const o={};function r(s,e){return a(),n("div",null,[...e[0]||(e[0]=[i('<h2 id="learning-objectives" tabindex="-1"><a class="header-anchor" href="#learning-objectives"><span>Learning Objectives</span></a></h2><p>By the end of this section, you will understand:</p><ul><li>The purpose and function of Test Kitchen&#39;s converge stage</li><li>How to use different infrastructure configurations</li><li>The differences between vanilla and hardened environments</li></ul><h2 id="test-kitchen-converge-stage" tabindex="-1"><a class="header-anchor" href="#test-kitchen-converge-stage"><span>Test Kitchen Converge Stage</span></a></h2><p>The <code>converge</code> stage applies system configurations using infrastructure as code (IaC) tools. This crucial stage transforms your environment from a base state to your desired configuration.</p><div class="hint-container info"><p class="hint-container-title">Let &#39;em cook</p><p>Think of the converge stage as &quot;applying your recipe&quot; - it takes your raw ingredients (base system) and follows your instructions to create the final dish (configured system).</p></div><p>Supported configuration tools include:</p><ul><li>Ansible Playbooks (used in this course)</li><li>Puppet</li><li>Chef</li><li>Terraform</li><li>Shell scripts</li></ul><h2 id="ec2-and-vagrant-converge" tabindex="-1"><a class="header-anchor" href="#ec2-and-vagrant-converge"><span>EC2 and Vagrant Converge</span></a></h2><p>We implement two distinct configurations using &#39;wrapper playbooks&#39;:</p><ol><li><p><strong>Vanilla Environment</strong></p><ul><li>Purpose: Establishes baseline test environment</li><li>Implementation: Basic configuration playbook</li></ul></li><li><p><strong>Hardened Environment</strong></p><ul><li>Purpose: Creates security-enhanced environment</li><li>Components: <ul><li>Base vanilla configuration</li><li>RHEL8-STIG security controls</li><li>Ansible Galaxy dependencies</li><li>Custom roles and requirements</li></ul></li></ul></li></ol><div class="hint-container note"><p class="hint-container-title">While some hardening tasks are disabled for testing, this doesn&#39;t compromise our security validation goals.</p></div><h2 id="hands-on-practice" tabindex="-1"><a class="header-anchor" href="#hands-on-practice"><span>Hands-on Practice</span></a></h2><h3 id="container-converge" tabindex="-1"><a class="header-anchor" href="#container-converge"><span>Container Converge</span></a></h3><p>Our container strategy utilizes two Red Hat UBI9 (Universal Base Image) variants. Take a look at the SAF&#39;s <a href="https://github.com/mitre/redhat-enterprise-linux-9-stig-baseline/tree/main" target="_blank" rel="noopener noreferrer">RHEL9 InSpec profile</a> which also includes our Test Kitchen and Ansible code that we use to test that our InSpec tests work properly.</p><ol><li><strong>Vanilla Container</strong></li></ol><p>This container uses the <code>registry.access.redhat.com/ubi9/ubi:9.3-1610</code> image from RedHat&#39;s community repositories.</p><p>It represents a standard, out-of-the-box configuration.</p><ul><li>Community maintained</li><li>Standard configuration</li></ul><ol start="2"><li><strong>Hardened Container</strong></li></ol><p>This container uses the <code>registry1.dso.mil/ironbank/redhat/ubi/ubi9</code> image from Red Hat&#39;s Platform One Iron Bank project.</p><p>It represents a security-enhanced configuration.</p><ul><li>STIG-compliant</li><li>Regular security updates</li><li>Platform One certified</li></ul><p>Try these exercises:</p><ol><li>Compare the contents of vanilla and hardened playbooks</li><li>Identify key security configurations in the RHEL9-STIG role</li><li>Examine the wrapper playbook structure in the spec/ directory</li></ol><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><ul><li>Converge stage implements your desired system configurations</li><li>Multiple implementation tools available (Ansible, Puppet, Chef, etc.)</li><li>Two primary configurations: vanilla (baseline) and hardened (security-enhanced)</li><li>Container implementations use different images with different security postures</li></ul><div class="hint-container info"><p class="hint-container-title">Next Steps</p><p>Practice running the converge stage with both vanilla and hardened configurations to understand the differences in outcomes.</p></div>',28)])])}const p=t(o,[["render",r]]),d=JSON.parse(`{"path":"/courses/profile-dev-test/17.html","title":"17. Test Kitchen - Converge","lang":"en-US","frontmatter":{"order":17,"next":"18.md","title":"17. Test Kitchen - Converge","author":"Aaron Lippold","description":"Learning Objectives By the end of this section, you will understand: The purpose and function of Test Kitchen's converge stage How to use different infrastructure configurations...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"17. Test Kitchen - Converge\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-13T06:04:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/profile-dev-test/17.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"17. Test Kitchen - Converge"}],["meta",{"property":"og:description","content":"Learning Objectives By the end of this section, you will understand: The purpose and function of Test Kitchen's converge stage How to use different infrastructure configurations..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-13T06:04:07.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-13T06:04:07.000Z"}]]},"git":{"createdTime":1704493101000,"updatedTime":1734069847000,"contributors":[{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":4},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":1},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":1}]},"readingTime":{"minutes":1.29,"words":388},"filePathRelative":"courses/profile-dev-test/17.md","autoDesc":true}`);export{p as comp,d as data};
