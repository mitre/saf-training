import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as r,b as i,d as h,w as s,r as d,o as k,e as n}from"./app-Cw6QY_M_.js";const c={},g={class:"hint-container details"},u={class:"hint-container details"};function m(y,e){const l=d("CodeTabs");return k(),p("div",null,[e[10]||(e[10]=r('<h2 id="generating-inspec-results" tabindex="-1"><a class="header-anchor" href="#generating-inspec-results"><span>Generating InSpec Results</span></a></h2><h3 id="try-it-out" tabindex="-1"><a class="header-anchor" href="#try-it-out"><span>Try it out!</span></a></h3><p>InSpec allows you to send your test results to one or more <em>reporters</em>, or output formats. The following command outputs results to both the terminal (<code>cli</code>) and to a JSON report file (<code>json:baseline_output.json</code>).</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker://nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:baseline_output.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="generating-good-report-filenames-in-practice" tabindex="-1"><a class="header-anchor" href="#generating-good-report-filenames-in-practice"><span>Generating good report filenames in practice</span></a></h3><p>When using InSpec in practice, most users aggregate report files from multiple systems over time, so we recommend that you generate reports that specify:</p><ul><li>the target they were run against</li><li>a timestamp</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:nginx-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +&quot;%Y-%m-%d-%H-%M-%S&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Here we add a bash <code>eval</code> (the <code>$(date +&quot;%Y-%m-%d-%H-%M-%S&quot;)</code>) to our filename when we invoke <code>inspec exec</code>. Now we can run tests multiple times with the same command and get a different filename each time.</p><div class="hint-container caution"><p class="hint-container-title">Caution</p><p>Note that if you save InSpec results to a file (such as with the <code>json</code> reporter), and then re-run the same command, you will overwrite the original contents of that file with the more recent results. This is not always what we want to have happen. Be sure that all of your generated reports have unique names!</p></div><h3 id="additional-reporter-examples-for-reference" tabindex="-1"><a class="header-anchor" href="#additional-reporter-examples-for-reference"><span>Additional Reporter Examples for Reference</span></a></h3>',11)),i("details",g,[e[4]||(e[4]=i("summary",null,"Output JSON to screen",-1)),h(l,{data:[{id:"Command"},{id:"Alternative Command"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[...e[0]||(e[0]=[n("Command",-1)])]),title1:s(({value:a,isActive:t})=>[...e[1]||(e[1]=[n("Alternative Command",-1)])]),tab0:s(({value:a,isActive:t})=>[...e[2]||(e[2]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"inspec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," exec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," my_nginx"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --reporter"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," json")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),tab1:s(({value:a,isActive:t})=>[...e[3]||(e[3]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"inspec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," exec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," my_nginx"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --reporter"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," json:-")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),_:1})]),i("details",u,[e[9]||(e[9]=i("summary",null,"Output YAML to screen",-1)),h(l,{data:[{id:"Command"},{id:"Alternative Command"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[...e[5]||(e[5]=[n("Command",-1)])]),title1:s(({value:a,isActive:t})=>[...e[6]||(e[6]=[n("Alternative Command",-1)])]),tab0:s(({value:a,isActive:t})=>[...e[7]||(e[7]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"inspec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," exec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," my_nginx"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --reporter"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," yaml")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),tab1:s(({value:a,isActive:t})=>[...e[8]||(e[8]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"inspec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," exec"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," my_nginx"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --reporter"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," yaml:-")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),_:1})]),e[11]||(e[11]=r(`<details class="hint-container details"><summary>Output to screen and to a JSON file</summary><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:tmp/output.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Output only to files - a junit and HTML file</summary><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> junit2:tmp/junit.xml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> html:www/index.html</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Output JSON to the terminal and make a junit file</summary><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> junit2:tmp/junit.xml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="using-a-configuration-file-instead-of-the-reporter-flag" tabindex="-1"><a class="header-anchor" href="#using-a-configuration-file-instead-of-the-reporter-flag"><span>Using a configuration file instead of the --reporter flag</span></a></h3><p>InSpec also lets you capture all of these reporter options in a configuration file:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;reporter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;cli&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;stdout&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;json&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tmp/output.json&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;stdout&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can read more about this at <a href="https://docs.chef.io/inspec/config/" target="_blank" rel="noopener noreferrer">https://docs.chef.io/inspec/config/</a></p><h3 id="supported-reporters" tabindex="-1"><a class="header-anchor" href="#supported-reporters"><span>Supported Reporters</span></a></h3><p>The following are supported reporters:</p><ul><li>cli</li><li>json</li><li>json-min</li><li>yaml</li><li>documentation</li><li>junit2</li><li>progress</li><li>progress-bar</li><li>json-rspec</li><li>html2</li><li>automate</li><li>json-automate</li></ul><p>You can read more here: <a href="https://www.inspec.io/docs/reference/reporters/" target="_blank" rel="noopener noreferrer">https://www.inspec.io/docs/reference/reporters/</a></p><details class="hint-container details"><summary>Enhanced Outcomes</summary><p>InSpec includes the <code>--enhanced-outcomes</code> flag to enrich the output format slightly if more detail is needed.</p><p>When this flag is passed, the control level status outcomes of the profile execution are <code>Passed</code>, <code>Failed</code>, <code>Not Applicable (N/A)</code>, <code>Not Reviewed (N/R)</code>, or <code>Error (ERR)</code>.</p></details><h2 id="running-profiles-from-network-locations" tabindex="-1"><a class="header-anchor" href="#running-profiles-from-network-locations"><span>Running Profiles from Network Locations</span></a></h2><p>So far, we have been executing InSpec profiles that we have written ourselves and saved to the local machine. InSpec also gives you the ability to execute a profile that lives on the other end of an HTTP/S link or a <code>.git</code> link.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mitre/nginx-stigready-baseline</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker://nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pulling Profiles from the Network</p><p>We suggest that, when possible, you host your profile code on a version control system accessible from the internet (e.g. GitHub). That way, you are always running an up-to-date version of the code.</p><p>Note that &quot;an up-to-date version&quot; does not necessarily mean &quot;run the <code>main</code> branch of the profile as it exists on GitHub.&quot; You can make use of releases in your code repository, and then use the link to a stable release (<a href="https://docs.github.com/en/repositories/releasing-projects-on-github/linking-to-releases" target="_blank" rel="noopener noreferrer">GitHub example</a>) as your input to <code>inspec exec</code>. This conforms to best practices in automation -- avoid running any code that has not been thoroughly vetted as part of an offical release.</p></div><div class="hint-container warning"><p class="hint-container-title">Wait, what if I can&#39;t publish to GitHub?</p><p>Not everyone can open source their code, or make it available on the open Internet. Your organization or environment may be more suited to using a private code repository (e.g. GitLab or BitBucket) to store profiles. InSpec supports passing authentication tokens as part of profile locations:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://API_TOKEN@gitlab.supersecret.com/profiles/inspec_baseline.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>See the <a href="https://docs.chef.io/inspec/cli/#exec" target="_blank" rel="noopener noreferrer">exec command docs</a> for details.</p></div><h3 id="practice-running-inspec-using-a-profile-from-github" tabindex="-1"><a class="header-anchor" href="#practice-running-inspec-using-a-profile-from-github"><span>Practice Running InSpec Using a Profile From GitHub</span></a></h3><p>Let&#39;s try running an already-complete profile and generating a report.</p><p>The following command will run the SAF Validation Library&#39;s NGINX baseline profile from MITRE GitHub, and use the reporter to output a json file. You will need this JSON file for the next section, where we&#39;ll load our results into Heimdall:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mitre/nginx-stigready-baseline</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker://nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:nginx-full-baseline-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +&quot;%Y-%m-%d-%H-%M-%S&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.json</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --enhanced-outcomes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,21))])}const v=o(c,[["render",m]]),F=JSON.parse('{"path":"/courses/beginner/08.html","title":"8. Generating InSpec Results","lang":"en-US","frontmatter":{"order":8,"next":"09.md","title":"8. Generating InSpec Results","author":"Aaron Lippold","headerDepth":3,"toc":{"levels":[2,5]},"description":"Generating InSpec Results Try it out! InSpec allows you to send your test results to one or more reporters, or output formats. The following command outputs results to both the ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8. Generating InSpec Results\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-04T15:19:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/beginner/08.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"8. Generating InSpec Results"}],["meta",{"property":"og:description","content":"Generating InSpec Results Try it out! InSpec allows you to send your test results to one or more reporters, or output formats. The following command outputs results to both the ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-04T15:19:54.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-04T15:19:54.000Z"}]]},"git":{"createdTime":1653259416000,"updatedTime":1733325594000,"contributors":[{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":6},{"name":"em-c-rod","username":"em-c-rod","email":"32680215+em-c-rod@users.noreply.github.com","commits":3,"url":"https://github.com/em-c-rod"},{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":6},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":3},{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":4,"url":"https://github.com/wdower"},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":6},{"name":"p-oneil","username":"p-oneil","email":"poneil@mitre.org","commits":1,"url":"https://github.com/p-oneil"},{"name":"Will","username":"Will","email":"will@dower.dev","commits":1,"url":"https://github.com/Will"}]},"readingTime":{"minutes":2.64,"words":791},"filePathRelative":"courses/beginner/08.md","autoDesc":true}');export{v as comp,F as data};
