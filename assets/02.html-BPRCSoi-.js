import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o}from"./app-Cw6QY_M_.js";const n="/saf-training/assets/SAFPlan-CEjjPILK.png",s={};function r(c,e){return o(),a("div",null,[...e[0]||(e[0]=[i('<h2 id="_2-1-security-guidance" tabindex="-1"><a class="header-anchor" href="#_2-1-security-guidance"><span>2.1 Security Guidance</span></a></h2><p>Before we go further, let&#39;s discuss what we mean by &quot;security guidance&quot; and some of its characteristics that matter to us as security (and automation!) practitioners.</p><p><strong>Security guidance</strong> is documentation that defines what constitutes a secure configuration for a software component or category of components. It includes organizational requirements for security, best practices, and instructions on how to fix problems. It answers the important question that all developers and engineers ask when they want to secure their software -- &quot;What counts as &#39;secure&#39; for my system in the first place?&quot;</p><p>Most software projects will (or at least <em>should</em>) align themselves to a particular source for security guidance and follow it as a baseline that answers this question. For example, many commercial companies (and even some civilian government agencies) use the Center for Internet Security Benchmarks (CIS Benchmarks) as their baseline, while software deployed by the US Department of Defense is required to comply with the Defense Information Systems Agency&#39;s Security Technical Implementation Guides (STIGs), broadly speaking.</p><p>There are many different types of guidance documentation available to software developers. Software vendors often publish best practices guides, administration guides, or business requirements documents to instruct their userbase on how to best make use of the product. Security guidance is ultimately just another type of guidance document for effectively using a piece of software.</p><div class="hint-container note"><p class="hint-container-title">Other Guidance Sources</p><p>Have you used security guidance documents from other sources besides the ones mentioned here?</p></div><div class="hint-container warning"><p class="hint-container-title">Security Requirements Are Functional Requirements!</p><p>Software developers have a historical tendency to consider security as a completely separate activity from the basic process of building a software product. In a DevSecOps environment, however, security is just another functional requirement of your code.</p><p>You cannot ship code if it does not meet a functional requirement. Likewise, you cannot ship code that does not meet a security requirement!</p></div><p>This class content will be giving heavy focus to STIGs, since Vulcan was originally created to address pain points in the authorship process for STIG documents (which we will describe in detail a little later). We assume that most of the students who engage with this content will be working on government projects that require securing systems to &quot;STIG standard,&quot; or that the students work for software vendors who need to write such guidance. However, the principles behind what makes a quality STIG can be applied to security guidance of all kinds, and we hope you can take the lessons here and apply them to whatever guidance you create for your software.</p><h3 id="_2-1-1-organizational-policy-vs-baselines" tabindex="-1"><a class="header-anchor" href="#_2-1-1-organizational-policy-vs-baselines"><span>2.1.1 Organizational Policy vs. Baselines</span></a></h3><p>Many organizations that use popular security guidance documents as their baselines have their own specific organizational security policies that conflict with that baseline. For example, consider the following requirement in the STIG for the Red Hat 9 operating system:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>SV-258055 - RHEL 9 must automatically lock the root account until the root account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Let&#39;s say that the organization that you work for wants to enforce STIG requirements on its systems, but it also has its own internal security policy that is even more stringent than the STIG -- the root account should lock after <em>two</em> unsuccessful logon attempts in <em>10</em> minutes. This is a common situation in the wild, where your system might fall under multiple overlapping (or conflicting!) requirements.</p><p>Consequently, many government agencies use baseline security guidance as foundations to create their own tailored content for in-house use. In addition to Vulcan&#39;s usual workflow for creating new baselines, you can use it to ingest a published baseline document and conduct this tailoring process to create security guidance tailored to your organization.</p><div class="hint-container tip"><p class="hint-container-title">Automating Overlay Validation</p><p>You can check out the <a href="https://mitre.github.io/saf-training/courses/beginner/10.html#profile-dependencies-overlays" target="_blank" rel="noopener noreferrer">Beginner Security Automation Developer Class</a> for examples of how to write automated validation code with InSpec that is tailored from a baseline.</p></div><h2 id="_2-2-finding-security-guidance-documentation-baselines" tabindex="-1"><a class="header-anchor" href="#_2-2-finding-security-guidance-documentation-baselines"><span>2.2 Finding Security Guidance Documentation Baselines</span></a></h2><p>Commonly used security guidance is often available on the open Internet.</p><ul><li>CIS publishes its popular <a href="https://www.cisecurity.org/cis-benchmarks" target="_blank" rel="noopener noreferrer">Benchmarks</a> for free with registration (in PDF form, other formats require a subscription to CIS&#39;s SecureSuite)</li><li>DISA publishes all STIGs (and all the rest of its security documentation materials) for free on the <a href="https://public.cyber.mil/stigs/downloads/" target="_blank" rel="noopener noreferrer">DOD Cyber Exchange</a> public web page. <ul><li>DISA distributes STIGs as a set of PDFs describing metadata like a changelog and cover sheets, where the underlying STIG itself is stored as an XML document.</li></ul></li><li>NIST&#39;s <a href="https://ncp.nist.gov/repository" target="_blank" rel="noopener noreferrer">National Checklist Repository (NCP)</a> is a repository of securit configuration benchmarks and are publicly available.</li></ul><p>Your first question when planning for securing your software component should always be &quot;is there already published guidance documentation available for it?&quot;</p><h3 id="_2-2-1-what-do-i-do-if-there-isn-t-already-published-guidance-documentation-available-for-it" tabindex="-1"><a class="header-anchor" href="#_2-2-1-what-do-i-do-if-there-isn-t-already-published-guidance-documentation-available-for-it"><span>2.2.1 What Do I Do If There Isn&#39;t Already Published Guidance Documentation Available For It?</span></a></h3><p>If you need to secure a software component that <em>does not</em> have a published guidance document already, your best strategy is to find the next-closest guidance document and use it to inform the content you create. You can think of the process of writing security guidance as an open-book test; you should feel free to borrow the best ideas other from other baselines!</p><p>In the case of STIGs, DISA&#39;s official guidance (as per their <a href="https://public.cyber.mil/stigs/faqs/#toggle-id-11" target="_blank" rel="noopener noreferrer">FAQ</a>) states to check for a STIG for an earlier version of the same software and modify it as necessary.</p><p>Therefore, where no guidance exists, use the closest reasonable baseline.</p><h3 id="_2-2-2-what-if-there-are-no-reasonably-close-baselines" tabindex="-1"><a class="header-anchor" href="#_2-2-2-what-if-there-are-no-reasonably-close-baselines"><span>2.2.2 What If There Are No Reasonably Close Baselines?</span></a></h3><p>Then use Vulcan to make some. Good news; you&#39;re already reading the instructions on how to do that.</p><h2 id="_2-3-wait-aren-t-these-classes-about-automation-why-are-we-writing-documentation" tabindex="-1"><a class="header-anchor" href="#_2-3-wait-aren-t-these-classes-about-automation-why-are-we-writing-documentation"><span>2.3 Wait, Aren&#39;t These Classes About Automation? Why Are We Writing Documentation?</span></a></h2><p>One of the overall goals of the Security Automation Framework is to get people writing <em>quality</em> security automation content, not just any old hardening scripts and test suites.</p><p>In formal government assessment settings, you will need to prove that you are covering particular categories of security controls with your activities. You can only do that if you build your automation content around a well-built security guidance document that itself heavily references all of your upstream requirements.</p><p>Therefore, the Planning capability of the SAF -- dealing with the selection and creation of security baselines for automation -- is a critical component of the overall framework, even though it itself is not automated.</p><figure><img src="'+n+'" alt="SAF Plan Capability" tabindex="0" loading="lazy"><figcaption>SAF Plan Capability</figcaption></figure><p>The Plan capability comes first in the list because every other capability needs to refer back to it!</p>',30)])])}const h=t(s,[["render",r]]),d=JSON.parse(`{"path":"/courses/guidance/02.html","title":"2. Security Guidance","lang":"en-US","frontmatter":{"order":2,"next":"03.md","title":"2. Security Guidance","author":"Will Dower","headerDepth":3,"toc":{"levels":[2,5]},"description":"2.1 Security Guidance Before we go further, let's discuss what we mean by \\"security guidance\\" and some of its characteristics that matter to us as security (and automation!) pra...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. Security Guidance\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-03T20:12:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Will Dower\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/guidance/02.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"2. Security Guidance"}],["meta",{"property":"og:description","content":"2.1 Security Guidance Before we go further, let's discuss what we mean by \\"security guidance\\" and some of its characteristics that matter to us as security (and automation!) pra..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-03T20:12:25.000Z"}],["meta",{"property":"article:author","content":"Will Dower"}],["meta",{"property":"article:modified_time","content":"2024-12-03T20:12:25.000Z"}]]},"git":{"createdTime":1661291292000,"updatedTime":1733256745000,"contributors":[{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":4},{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":3,"url":"https://github.com/wdower"},{"name":"ssayed118","username":"ssayed118","email":"sumaasayed@mitre.org","commits":2,"url":"https://github.com/ssayed118"},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":3},{"name":"em-c-rod","username":"em-c-rod","email":"32680215+em-c-rod@users.noreply.github.com","commits":3,"url":"https://github.com/em-c-rod"},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":1},{"name":"p-oneil","username":"p-oneil","email":"poneil@mitre.org","commits":1,"url":"https://github.com/p-oneil"}]},"readingTime":{"minutes":3.68,"words":1104},"filePathRelative":"courses/guidance/02.md","autoDesc":true}`);export{h as comp,d as data};
