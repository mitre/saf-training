import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as l,c,a as n,b as a,F as p,e as s,d as t}from"./app.3b4d192a.js";const r={},d=n("h2",{id:"exploring-the-inspec-shell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exploring-the-inspec-shell","aria-hidden":"true"},"#"),s(" Exploring the InSpec Shell")],-1),u=n("p",null,"Before we test our NGINX configuration, let's plan which resources and matchers we'll need.",-1),v=n("p",null,"When writing InSpec code, many resources are available to you.",-1),b=s("You can "),m={href:"https://www.inspec.io/docs/",target:"_blank",rel:"noopener noreferrer"},h=s("explore the InSpec documentation"),k=s(" to see which resources and matchers are available."),g=s("You can "),y={href:"https://github.com/inspec/inspec",target:"_blank",rel:"noopener noreferrer"},_=s("examine the source code"),f=s(" to see what's available. For example, you can see how file and other InSpec resources are implemented."),x=s("You can also use examples, such as profiles provided on "),w={href:"https://supermarket.chef.io/tools-directory",target:"_blank",rel:"noopener noreferrer"},I=s("Chef Supermarket"),S=s(", as a guide."),q=s("There's also "),N={href:"https://www.inspec.io/docs/reference/shell/",target:"_blank",rel:"noopener noreferrer"},R=s("InSpec shell"),T=s(", which enables you to explore InSpec interactively. In this part, you'll use the InSpec shell to discover which resources you can use to test your NGINX configuration."),E=t(`<p>You&#39;re not required to use InSpec shell to develop your profiles. Some users find the InSpec shell to be a useful way to get immediate feedback and explore what&#39;s available. You can also use InSpec shell to debug your profiles.</p><h3 id="entering-the-inspec-shell" tabindex="-1"><a class="header-anchor" href="#entering-the-inspec-shell" aria-hidden="true">#</a> Entering the InSpec shell</h3><p>Run <code>inspec shell</code> to enter the interactive session.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which should drop you into the shell, like this:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Welcome to the interactive InSpec Shell
To find out how to use it, type: help

You are currently running on:

    Name:      ubuntu
    Families:  debian, linux, unix
    Release:   16.04
    Arch:      x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>help</code> to see what commands are available.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which should return something like:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>
inspec<span class="token operator">&gt;</span> <span class="token builtin class-name">help</span>
    You are currently running on:

        Name:      ubuntu
        Families:  debian, linux, unix
        Release:   <span class="token number">16.04</span>
        Arch:      x86_64

    Available commands:

        <span class="token variable"><span class="token variable">\`</span><span class="token punctuation">[</span>resource<span class="token punctuation">]</span><span class="token variable">\`</span></span> - run resource on target machine
        <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">help</span> resources<span class="token variable">\`</span></span> - show all available resources that can be used as commands
        <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">help</span> <span class="token punctuation">[</span>resource<span class="token punctuation">]</span><span class="token variable">\`</span></span> - information about a specific resource
        <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">help</span> matchers<span class="token variable">\`</span></span> - show information about common matchers
        <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">exit</span><span class="token variable">\`</span></span> - <span class="token builtin class-name">exit</span> the InSpec shell

    You can use resources <span class="token keyword">in</span> this environment to <span class="token builtin class-name">test</span> the target machine.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>help resources</code> to see which resources are available.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">help</span> resources
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which will return a list like:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec<span class="token operator">&gt;</span> <span class="token builtin class-name">help</span> resources

         - aide_conf
         - apache
         - apache_conf
         - <span class="token function">apt</span>
         - audit_policy
         - auditd
         - auditd_conf
         <span class="token punctuation">..</span>.
         - <span class="token function">file</span>
         <span class="token punctuation">..</span>.
         - xml
         - yaml
         - yum
         - yumrepo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You see <code>file</code> and other resources listed.</p><h3 id="exploring-the-file-resource" tabindex="-1"><a class="header-anchor" href="#exploring-the-file-resource" aria-hidden="true">#</a> Exploring the <code>file</code> resource</h3><p>Earlier, we saw this <code>describe</code> block:</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
  it <span class="token punctuation">{</span> should be_directory <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s run a few commands from the InSpec shell to see how the <code>file</code> resource functions.</p><div class="custom-container tip"><p class="custom-container-title">What is the difference between InSpec and Ruby?</p><p>Inspec is a Domain Specific Language (DSL) on top of Ruby. In other words, InSpec is built on the Ruby programming language. For example, InSpec matchers are implemented as Ruby methods.</p></div><p>Run this command to list which methods are available to the <code>file</code> resource.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>superclass<span class="token punctuation">.</span>instance_methods<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which will give you the following output:</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>superclass<span class="token punctuation">.</span>instance_methods<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort

        <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token symbol">:allowed?</span><span class="token punctuation">,</span>
         <span class="token symbol">:basename</span><span class="token punctuation">,</span>
         <span class="token symbol">:block_device?</span><span class="token punctuation">,</span>
         <span class="token symbol">:character_device?</span><span class="token punctuation">,</span>
         <span class="token symbol">:contain</span><span class="token punctuation">,</span>
         <span class="token symbol">:content</span><span class="token punctuation">,</span>
         <span class="token symbol">:directory?</span><span class="token punctuation">,</span>
         <span class="token operator">...</span>
         <span class="token symbol">:sticky</span><span class="token punctuation">,</span>
         <span class="token symbol">:sticky?</span><span class="token punctuation">,</span>
         <span class="token symbol">:suid</span><span class="token punctuation">,</span>
         <span class="token symbol">:symlink?</span><span class="token punctuation">,</span>
         <span class="token symbol">:to_s</span><span class="token punctuation">,</span>
         <span class="token symbol">:type</span><span class="token punctuation">,</span>
         <span class="token symbol">:uid</span><span class="token punctuation">,</span>
         <span class="token symbol">:version?</span><span class="token punctuation">,</span>
         <span class="token symbol">:writable?</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use the arrow or Page Up and Page Down keys to scroll through the list. When you&#39;re done, press <code>Q</code>.</p><div class="custom-container tip"><p class="custom-container-title">What is the InSpec Shell?</p><p>InSpec shell is based on a tool called <code>pry</code>. <code>pry</code> is an interactive debugging environment for ruby and is one of the ruby developer&#39;s weapons against bugs.</p></div><p>Let&#39;s use the InSpec shell to explore some resources in InSpec. We will start with one of the most common elements on the system: a directory.</p><p>In the InSpec Shell call the <code>file.directory?</code> method.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>file<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span>.directory?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will return <code>true</code>, since <code>/tmp</code> is a directory on the system.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec<span class="token operator">&gt;</span> file<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span>.directory?
        <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see that the <code>/tmp</code> directory exists on your workstation container.</p><p>To make the tests easier to read, the InSpec language uses &quot;syntactic sugar&quot; to turn methods into English-like phrases. For example, the Ruby language contains boolean methods ending in <code>?</code> which evaluate to <code>true</code> or <code>false</code> (<code>nil</code> is a type of false). InSpec changes the syntax of these methods to include <code>be_</code> before the method rather than <code>?</code> after the method to make it more readable. For example, to check if a directory exists, Ruby would traditionally use <code>directory?</code> while InSpec uses <code>be_directory</code>.</p>`,33),Y={class:"custom-container info"},A=n("p",{class:"custom-container-title"},"Using Ruby Predicate Methods",-1),G=s("Given what we have just learned, the "),W=n("strong",null,"best practice",-1),X=s(" in InSpec is to return something that evaluates to "),F=n("code",null,"true",-1),D=s(" or "),L=n("code",null,"false",-1),C=s(". The "),M=n("code",null,"?",-1),P=s(" (or "),B=n("code",null,"be_",-1),U=s(" in InSpec) makes your method a Ruby Predicate Method. See "),V={href:"http://ruby-for-beginners.rubymonstas.org/objects/predicates.html",target:"_blank",rel:"noopener noreferrer"},z=s("Ruby predicate methods"),O=s(" to learn more."),j=t(`<p>The InSpec shell understands the structure of blocks. This enables you to run mutiline code. As an example, run the entire <code>describe</code> block like this.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
  it <span class="token punctuation">{</span> should be_directory <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Which will run the entire block of code in the InSpec Shell and return the result.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
inspec<span class="token operator">&gt;</span>  it <span class="token punctuation">{</span> should be_directory <span class="token punctuation">}</span>
inspec<span class="token operator">&gt;</span> <span class="token keyword">end</span>

<span class="token symbol">Profile</span><span class="token operator">:</span> inspec<span class="token operator">-</span>shell
<span class="token symbol">Version</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">not</span> specified<span class="token punctuation">)</span>

<span class="token builtin">File</span> <span class="token operator">/</span>tmp
  \u2714  should be directory

Test Summary<span class="token operator">:</span> <span class="token number">1</span> successful<span class="token punctuation">,</span> <span class="token number">0</span> failures<span class="token punctuation">,</span> <span class="token number">0</span> skipped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In practice, you don&#39;t typically run controls interactively this way for day to day use, but it is a great way to test out your ideas, find bugs or validate your approach before running a scan in its entirety on a target of evaluation.</p><h3 id="explore-the-nginx-resource" tabindex="-1"><a class="header-anchor" href="#explore-the-nginx-resource" aria-hidden="true">#</a> Explore The nginx Resource</h3><p>Now&#39;s a good time to define the requirements for our NGINX configuration. Let&#39;s say that you require:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>. NGINX version <span class="token number">1.10</span>.3 or later.
<span class="token number">2</span>. The following NGINX modules should be installed:
   * <span class="token variable"><span class="token variable">\`</span>http_ssl<span class="token variable">\`</span></span>
   * <span class="token variable"><span class="token variable">\`</span>stream_ssl<span class="token variable">\`</span></span>
   * <span class="token variable"><span class="token variable">\`</span>mail_ssl<span class="token variable">\`</span></span>
<span class="token number">3</span>. The NGINX configuration <span class="token function">file</span> - <span class="token variable"><span class="token variable">\`</span>/etc/nginx/nginx.conf<span class="token variable">\`</span></span>- should:
   * be owned by the <span class="token variable"><span class="token variable">\`</span>root<span class="token variable">\`</span></span> user and group.
   * not be readable, writeable, or executable by others.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s see what resources are available to help define these requirements as InSpec controls.</p><p>Run <code>help resources</code> a second time.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">help</span> resources
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Notice InSpec provides two built-in resources to support NGINX \u2013 <code>nginx</code> and <code>nginx_conf</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec<span class="token operator">&gt;</span> <span class="token builtin class-name">help</span> resources

         - aide_conf
         - apache
         - apache_conf
         - <span class="token function">apt</span>
         <span class="token punctuation">..</span>.
         - nginx
         - nginx_conf
         <span class="token punctuation">..</span>.
         - xml
         - yaml
         - yum
         - yumrepo
         - zfs_dataset
         - zfs_pool
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>nginx.methods</code>.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>nginx<span class="token punctuation">.</span>methods
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can see the <code>version</code> and <code>modules</code> methods.</p><p>You will use these methods to define the first two requirements.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> nginx<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>superclass<span class="token punctuation">.</span>instance_methods<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort

        <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token symbol">:bin_dir</span><span class="token punctuation">,</span>
         <span class="token symbol">:compiler_info</span><span class="token punctuation">,</span>
         <span class="token symbol">:error_log_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_client_body_temp_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_fastcgi_temp_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_log_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_proxy_temp_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_scgi_temp_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:http_uwsgi_temp_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:lock_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:modules</span><span class="token punctuation">,</span>
         <span class="token symbol">:modules_path</span><span class="token punctuation">,</span>
         <span class="token symbol">:openssl_version</span><span class="token punctuation">,</span>
         <span class="token operator">...</span>
         <span class="token symbol">:to_s</span><span class="token punctuation">,</span>
         <span class="token symbol">:version</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>nginx.version</code> to see what result you get.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>nginx<span class="token punctuation">.</span>version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Expected Error Ahead</p><p>Recall that you&#39;re working on your workstation environment, which does not have NGINX installed.</p></div><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> nginx<span class="token punctuation">.</span>version

        <span class="token symbol">NoMethodError</span><span class="token operator">:</span> undefined method \`<span class="token punctuation">[</span><span class="token punctuation">]</span>&#39; <span class="token keyword">for</span> <span class="token keyword">nil</span><span class="token symbol">:NilClass</span>
        from <span class="token operator">/</span>opt<span class="token operator">/</span>inspec<span class="token operator">/</span>embedded<span class="token operator">/</span>lib<span class="token operator">/</span>ruby<span class="token operator">/</span>gems<span class="token operator">/</span><span class="token number">2.4</span><span class="token number">.0</span><span class="token operator">/</span>gems<span class="token operator">/</span>inspec<span class="token operator">-</span><span class="token number">2.0</span><span class="token number">.17</span><span class="token operator">/</span>lib<span class="token regex-literal"><span class="token regex">/resources/nginx</span></span><span class="token punctuation">.</span>rb<span class="token operator">:</span><span class="token number">39</span><span class="token symbol">:in</span> \`block <span class="token punctuation">(</span><span class="token number">2</span> levels<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span><span class="token keyword">class</span><span class="token symbol">:Nginx</span><span class="token operator">&gt;</span>&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can verify this with Inspec by running the following command:</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>package<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;nginx&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>installed<span class="token operator">?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>As you can see we get <code>false</code> - since nginx is not installed on your <code>runner</code>.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> package<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;nginx&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>installed<span class="token operator">?</span>

        <span class="token operator">=&gt;</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now that we have explored and discovered the resource methods we need \u2013 <code>version</code> and <code>modules</code> \u2013 let&#39;s run InSpec shell commands against the target that does have NGINX installed to see what results we find.</p><p>To do so, first start by exiting your InSpec shell session.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>inspec&gt; exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run <code>inspec shell</code> a second time and this time, provide the <code>-t</code> argument to connect the shell session to the target container.</p><p>First let&#39;s find our nginx container id using the <code>docker ps</code> command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which will return something like:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u279C  course git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> \u2717 <span class="token function">docker</span> <span class="token function">ps</span>
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                NAMES
d4bcef5bb9e3   nginx:latest   <span class="token string">&quot;/docker-entrypoint.\u2026&quot;</span>   <span class="token number">23</span> seconds ago   Up <span class="token number">22</span> seconds   <span class="token number">80</span>/tcp               nifty_shtern
4f0ceb9b5974   nginx:latest   <span class="token string">&quot;/docker-entrypoint.\u2026&quot;</span>   <span class="token number">2</span> months ago     Up <span class="token number">45</span> seconds   <span class="token number">0.0</span>.0.0:80-<span class="token operator">&gt;</span><span class="token number">80</span>/tcp   nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can then use the container id of our nginx container to target the inspec shell at that container.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec shell -t docker://CONTAINER_ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>InSpec will then return at the Shell Prompt as before but this time we see we are on our container.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Welcome to the interactive InSpec Shell
To <span class="token function">find</span> out how to use it, type: <span class="token builtin class-name">help</span>

You are currently running on:

    Name:      debian
    Families:  debian, linux, unix, os
    Release:   <span class="token number">11.2</span>
    Arch:      aarch64

inspec<span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Remember that the target does not have InSpec installed on it. Your shell session exists on the workstation; InSpec routes commands to the target instance over Docker.</p><p>Run the <code>package</code> resource a second time, this time on the target container.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>package<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;nginx&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>installed<span class="token operator">?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>As you can see, how the InSpec <code>package</code> resources returns <code>true</code>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>inspec&gt; package(&#39;nginx&#39;).installed?

        =&gt; true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, let&#39;s get the <code>version</code> of NGINX that is installed on the target, run: <code>nginx.version</code></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>nginx<span class="token punctuation">.</span>version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can see that version 1.10.3 was installed on our container.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>inspec&gt; nginx.version

        =&gt; &quot;1.10.3&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To complete the example, let&#39;s see which <code>modules</code> are enabled on the nginx container. Run <code>nginx.modules</code> to list the installed NGINX modules.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>nginx<span class="token punctuation">.</span>modules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You see below - and hopefully on the data you got back on your container - that the required modules, <code>http_ssl</code>, <code>stream_ssl</code>, and <code>mail_ssl</code>, are installed.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> nginx<span class="token punctuation">.</span>modules

        <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;http_ssl&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_stub_status&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_realip&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_auth_request&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_addition&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_dav&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_geoip&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_gunzip&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_gzip_static&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_image_filter&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_v2&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_sub&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;http_xslt&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;stream_ssl&quot;</span></span><span class="token punctuation">,</span>
         <span class="token string-literal"><span class="token string">&quot;mail_ssl&quot;</span></span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),Q=s("The "),H={href:"https://www.inspec.io/docs/reference/resources/nginx_conf/",target:"_blank",rel:"noopener noreferrer"},J=s("nginx_conf"),K=s(" resource examines the contents of the NGINX configuration file, "),Z=n("code",null,"/etc/nginx/nginx.conf",-1),$=s("."),nn=t(`<p>Recall that the third requirement is to check whether the NGINX configuration file is owned by <code>root</code> and is not readable, writeable, or executable by others. Because we want to test attributes of the file itself, and not its contents, you&#39;ll use the <code>file</code> resource.</p><p>You saw earlier how the <code>file</code> resource provides the <code>readable</code>, <code>writeable</code>, and <code>executable</code> methods. You would also see that the <code>file</code> resource provides the <code>owned_by</code> and <code>grouped_into</code> methods.</p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>inspec<span class="token operator">&gt;</span> file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>superclass<span class="token punctuation">.</span>instance_methods<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort

        <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token symbol">:allowed?</span><span class="token punctuation">,</span>
         <span class="token symbol">:directory?</span><span class="token punctuation">,</span>
         <span class="token symbol">:executable?</span><span class="token punctuation">,</span>
         <span class="token symbol">:exist?</span><span class="token punctuation">,</span>
         <span class="token symbol">:file</span><span class="token punctuation">,</span>
         <span class="token symbol">:file?</span><span class="token punctuation">,</span>
         <span class="token symbol">:file_version</span><span class="token punctuation">,</span>
         <span class="token symbol">:gid</span><span class="token punctuation">,</span>
         <span class="token symbol">:group</span><span class="token punctuation">,</span>
         <span class="token symbol">:grouped_into?</span><span class="token punctuation">,</span>
         <span class="token operator">...</span>
         <span class="token symbol">:owned_by?</span><span class="token punctuation">,</span>
         <span class="token operator">...</span>
         <span class="token symbol">:readable?</span><span class="token punctuation">,</span>
         <span class="token operator">...</span>
         <span class="token symbol">:to_s</span><span class="token punctuation">,</span>
         <span class="token symbol">:type</span><span class="token punctuation">,</span>
         <span class="token symbol">:uid</span><span class="token punctuation">,</span>
         <span class="token symbol">:version?</span><span class="token punctuation">,</span>
         <span class="token symbol">:writable?</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These 5 <code>file</code> methods \u2013 <code>grouped_into</code>, <code>executable</code>, <code>owned_by</code>, <code>readable</code> and <code>writeable</code> \u2013 provide everything we need for the third requirement.</p><p>Exit the InSpec shell session with the <code>exit</code> command.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>inspec<span class="token operator">&gt;</span> <span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function sn(en,an){const e=o("ExternalLinkIcon");return l(),c(p,null,[d,u,v,n("ul",null,[n("li",null,[b,n("a",m,[h,a(e)]),k]),n("li",null,[g,n("a",y,[_,a(e)]),f]),n("li",null,[x,n("a",w,[I,a(e)]),S])]),n("p",null,[q,n("a",N,[R,a(e)]),T]),E,n("div",Y,[A,n("p",null,[G,W,X,F,D,L,C,M,P,B,U,n("a",V,[z,a(e)]),O])]),j,n("p",null,[Q,n("a",H,[J,a(e)]),K,Z,$]),nn],64)}var ln=i(r,[["render",sn],["__file","04.html.vue"]]);export{ln as default};
