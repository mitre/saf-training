import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as h,d as k,b as i,w as n,r as d,o,e as s}from"./app-Cw6QY_M_.js";const c="/saf-training/assets/triggered_workflow-wnE7c8oi.png",g="/saf-training/assets/workflow_view-h0hr98gc.png",u="/saf-training/assets/job-DTuNisUG.png",y="/saf-training/assets/many_commits_are_ok-pxAisLll.png",A={};function m(v,a){const t=d("CodeTabs");return o(),p("div",null,[a[16]||(a[16]=h(`<h2 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h2><p>Let&#39;s create a GitHub Action workflow to define our pipeline.</p><h3 id="the-workflow-file" tabindex="-1"><a class="header-anchor" href="#the-workflow-file"><span>The Workflow File</span></a></h3><p>Pipeline orchestration tools are usually configured in a predefined workflow file, which defines a set of tasks and the order they should run in. Workflow files live in the <code>.github</code> folder for GitHub Actions (the equivalent is the <code>gitlab-ci</code> file for GitLab CI, for example).</p><p>Let&#39;s create a new file to store our workflow.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .github</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .github/workflows</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .github/workflows/pipeline.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Neither command has output, but you should see a new file if you examine your <code>.github</code> directory:</p>`,7)),k(t,{data:[{id:"Tree Command"},{id:"Expected Output - .github folder structure"}],"tab-id":"shell"},{title0:n(({value:e,isActive:l})=>[...a[0]||(a[0]=[s("Tree Command",-1)])]),title1:n(({value:e,isActive:l})=>[...a[1]||(a[1]=[s("Expected Output - .github folder structure",-1)])]),tab0:n(({value:e,isActive:l})=>[...a[2]||(a[2]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"tree"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .github")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),tab1:n(({value:e,isActive:l})=>[...a[3]||(a[3]=[i("div",{class:"language- line-numbers-mode","data-highlighter":"shiki","data-ext":"",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-"},[i("span",{class:"line"},[i("span",null,".github")]),s(`
`),i("span",{class:"line"},[i("span",null,"└── workflows")]),s(`
`),i("span",{class:"line"},[i("span",null,"    └── pipeline.yml")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),a[17]||(a[17]=h(`<p>Open that file up for editing.</p><h3 id="workflow-file-complete-example" tabindex="-1"><a class="header-anchor" href="#workflow-file-complete-example"><span>Workflow File - Complete Example</span></a></h3><p>For reference, this is the complete workflow file we will end up with at the end of the class:</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Demo Security Validation Gold Image Pipeline</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># define the triggers for this action</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:                                             </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # trigger this action on any push to main branch</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]                </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  gold-image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Gold Image NGINX</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-24.04</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # so that we can use InSpec without manually accepting the license</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      CHEF_LICENSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # path to our profile                   </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      PROFILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">my_nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # updating all dependencies is always a good start</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PREP - Update runner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sudo apt-get update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PREP - Install InSpec executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          curl https://omnitruck.chef.io/install.sh | \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          sudo bash -s -- -P inspec -v 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PREP - Install SAF CLI</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">npm install -g @mitre/saf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # checkout the profile, because that&#39;s where our profile is!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PREP - Check out this repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/checkout@v3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # double-check that we don&#39;t have any serious issues in our profile code</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LINT - Run InSpec Check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">inspec check $PROFILE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # launch a container as the test target</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DEPLOY - Run a Docker container from nginx</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run -dit --name nginx nginx:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # install dependencies on the container so that hardening will work</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DEPLOY - Install Python for our nginx container</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          docker exec nginx apt-get update -y</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          docker exec nginx apt-get install -y python3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # fetch the hardening role and requirements</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HARDEN - Fetch Ansible role</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          git clone \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          https://github.com/mitre/ansible-nginx-stigready-hardening.git \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --branch docker \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          || true</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          chmod 755 ansible-nginx-stigready-hardening</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HARDEN - Fetch Ansible requirements</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          ansible-galaxy install \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -r ansible-nginx-stigready-hardening/requirements.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # harden!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HARDEN - Run Ansible hardening</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          ansible-playbook \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --inventory=nginx, \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --connection=docker \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          ansible-nginx-stigready-hardening/hardening-playbook.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VALIDATE - Run InSpec</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # we dont want to stop if our InSpec run finds failures, we want to continue and record the result</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        continue-on-error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          inspec exec $PROFILE \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --input-file=$PROFILE/inputs-linux.yml \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --target docker://nginx \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          --reporter cli json:results/pipeline_run.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # attest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VALIDATE - Apply an Attestation</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          saf attest apply \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -i results/pipeline_run.json attestation.json \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -o results/pipeline_run_attested.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # save our results to the pipeline artifacts, even if the InSpec run found failing tests</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VALIDATE - Save Test Result JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/upload-artifact@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">results/pipeline_run_attested.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # drop off the data with our dashboard</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VALIDATE - Upload to Heimdall</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        continue-on-error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          curl -# -s \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -F data=@results/pipeline_run_attested.json \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -F &quot;filename=\${{ github.actor }}-pipeline-demo-\${{ github.sha }}.json&quot; \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -F &quot;public=true&quot; -F &quot;evaluationTags=\${{ github.repository }},\${{ github.workflow }}&quot; \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          -H &quot;Authorization: Api-Key \${{ secrets.HEIMDALL_API_KEY }}&quot; &quot;https://heimdall-demo.mitre.org/evaluations&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VERIFY - Display our results summary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          saf view summary -i results/pipeline_run_attested.json</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # check if the pipeline passes our defined threshold</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VERIFY - Ensure the scan meets our results threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          saf validate threshold -i results/pipeline_run_attested.json -F threshold.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is a bit much all in one bite, so let&#39;s construct this full pipeline piece by piece.</p><p>You already have this file sitting in your .github directory in your lab environment if you are following along using our lab environment and a codespace. We suggest moving the original pipeline.yml file out of the .github directory while we are working on these sections, so that you have it for reference, but it will not trigger an actual pipeline run if the file is not in the correct directory, so we can practice building it out ourselves.</p><h3 id="workflow-triggers" tabindex="-1"><a class="header-anchor" href="#workflow-triggers"><span>Workflow Triggers</span></a></h3><p>Pipeline orchestrators need you to define some set of events that should trigger the pipeline to run. The first thing we want to define in a new pipeline is what triggers it.</p><p>In our case, we want this pipeline to be a continuous integration pipeline, which should trigger every time we push code to the repository. Other options include &quot;trigger this pipeline when a pull request is opened on a branch,&quot; or &quot;trigger this pipeline when someone opens an issue on our repository,&quot; or even &quot;trigger this pipeline when I hit the manual trigger button.&quot;</p><div class="hint-container note"><p class="hint-container-title">Saving Files vs. Pushing Code</p><p>In all class content so far, we have been taking advantage of Codespaces&#39; autosave feature. We have been saving our many edits to our profiles locally.</p><p><em>Pushing code</em>, by contrast, means taking your saved code and officially adding it to your base repository&#39;s committed codebase, making it a permanent change. Codespaces won&#39;t do that automatically.</p></div><p>Let&#39;s give our pipeline a name and add a workflow trigger. Add the following into the <code>pipeline.yml</code> file:</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Demo Security Validation Gold Image Pipeline</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># define the triggers for this action</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:                                             </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # trigger this action on any push to main branch</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GitHub Actions has a number of <a href="https://docs.github.com/en/actions/using-workflows/triggering-a-workflow" target="_blank" rel="noopener noreferrer">pre-defined workflow triggers</a> we can lean on and refer to as attributes in our YAML file. GitHub will now watch for pushes to our <code>main</code> branch and run the workflow when it sees a push.</p><div class="hint-container warning"><p class="hint-container-title">YAML Syntax</p><p>We will be heavily editing <code>pipeline.yml</code> throughout this part of the class. Recall that YAML files like this are whitespace-delimited. If you hit confusing errors when we run these pipelines, always be sure to double-check your code lines up with the examples.</p></div><div class="hint-container note"><p class="hint-container-title">Why Is <code>[main]</code> in brackets?</p><p>The <code>branches</code> attribute in a workflow file can accept an array of branches we want to trigger the pipeline if they see a commit. We are only concerned with <code>main</code> at present, so we wind up with &#39;<code>[main]</code>&#39;.</p></div><h3 id="our-first-step" tabindex="-1"><a class="header-anchor" href="#our-first-step"><span>Our First Step</span></a></h3><p>Next, we need to define some kind of task to complete when the event triggers.</p><p>First, we&#39;ll define a <code>job</code>, the logical group for our tasks. In our <code>pipeline.yml</code> file, add:</p>`,18)),k(t,{data:[{id:"Adding a Job"},{id:"<code v-pre>pipeline.yml</code> after adding a job"}],"tab-id":"shell"},{title0:n(({value:e,isActive:l})=>[...a[4]||(a[4]=[s("Adding a Job",-1)])]),title1:n(({value:e,isActive:l})=>[...a[5]||(a[5]=[i("code",null,"pipeline.yml",-1),s(" after adding a job",-1)])]),tab0:n(({value:e,isActive:l})=>[...a[6]||(a[6]=[i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-yaml"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"jobs"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"  gold-image"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"Gold Image NGINX")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    runs-on"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"ubuntu-24.04")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    env"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # so that we can use InSpec without manually accepting the license")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      CHEF_LICENSE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"accept"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # path to our profile                   ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      PROFILE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:n(({value:e,isActive:l})=>[...a[7]||(a[7]=[i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-yaml"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"Demo Security Validation Gold Image Pipeline")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# define the triggers for this action")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"on"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":                                             ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"  push"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"    # trigger this action on any push to main branch")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    branches"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": [ "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"main"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"pipeline"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ]                ")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"jobs"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"  gold-image"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"Gold Image NGINX")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    runs-on"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"ubuntu-24.04")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    env"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # so that we can use InSpec without manually accepting the license")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      CHEF_LICENSE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"accept"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # path to our profile                   ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      PROFILE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),a[18]||(a[18]=h('<ul><li><code>gold-image</code> is an arbitrary name we gave this job. It would be more useful if we were running more than one.</li><li><code>name</code> is a simple title for this job.</li><li><code>runs-on</code> declares what operating system we want our runner node to be. We picked Ubuntu (and we suggest you do as well to make sure the rest of the workflow commands work correctly).</li><li><code>env</code> declares environment variables for use by any step of this job. We will go ahead and set a few variables for running InSpec later on: <ul><li><code>CHEF_LICENSE</code> will automatically accept the license prompt when you run InSpec the first time so that we don&#39;t hang waiting for input!</li><li><code>PROFILE</code> is set to the path of the InSpec profile we will use to test. This will make it easier to refer to the profile multiple times and still make it easy to swap out.</li></ul></li></ul><h3 id="the-next-step" tabindex="-1"><a class="header-anchor" href="#the-next-step"><span>The Next Step</span></a></h3><p>Now that we have our job metadata in place, let&#39;s add an actual task for the runner to complete, which GitHub Actions refer to as <strong>steps</strong> -- a quick update on our runner node&#39;s dependencies (this shouldn&#39;t be strictly necessary, but it&#39;s always good to practice good dependency hygiene!). In our <code>pipeline.yml</code> file, add:</p>',3)),k(t,{data:[{id:"Adding a Step"},{id:"<code v-pre>pipeline.yml</code> after adding a step"}],"tab-id":"shell"},{title0:n(({value:e,isActive:l})=>[...a[8]||(a[8]=[s("Adding a Step",-1)])]),title1:n(({value:e,isActive:l})=>[...a[9]||(a[9]=[i("code",null,"pipeline.yml",-1),s(" after adding a step",-1)])]),tab0:n(({value:e,isActive:l})=>[...a[10]||(a[10]=[i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-yaml"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"steps"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # updating all dependencies is always a good start")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  - "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"PREP - Update runner"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"              ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    run"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"sudo apt-get update")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:n(({value:e,isActive:l})=>[...a[11]||(a[11]=[i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-yaml"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"Demo Security Validation Gold Image Pipeline")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# define the triggers for this action")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"on"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":                                             ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"  push"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"    # trigger this action on any push to main branch")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    branches"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": [ "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"main"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"pipeline"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ]                ")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"jobs"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"  gold-image"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"Gold Image NGINX")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    runs-on"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"ubuntu-24.04")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    env"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # so that we can use InSpec without manually accepting the license")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      CHEF_LICENSE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"accept"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"       # path to our profile                   ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      PROFILE"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"                        ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    steps"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"      # updating all dependencies is always a good start")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"      - "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"PREP - Update runner"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"              ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        run"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"sudo apt-get update")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),a[19]||(a[19]=i("div",{class:"hint-container warning"},[i("p",{class:"hint-container-title"},"Again, be very careful about your whitespacing when filling out this structure!")],-1)),a[20]||(a[20]=i("p",null,"We now have a valid workflow file that we can run. We can trigger this pipeline to run by simply committing what we have written so far to our repository -- because of the event trigger we set, GitHub will catch the commit event and trigger our pipeline for us. Let's do this now. At your terminal:",-1)),k(t,{data:[{id:"Committing And Pushing Code"},{id:"Output of Pushing Code"}],"tab-id":"shell"},{title0:n(({value:e,isActive:l})=>[...a[12]||(a[12]=[s("Committing And Pushing Code",-1)])]),title1:n(({value:e,isActive:l})=>[...a[13]||(a[13]=[s("Output of Pushing Code",-1)])]),tab0:n(({value:e,isActive:l})=>[...a[14]||(a[14]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .github")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," commit"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -s"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -m"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "adding the github workflow file"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," origin"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:n(({value:e,isActive:l})=>[...a[15]||(a[15]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-sh"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," commit"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -s"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -m"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "adding the github workflow file"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[main c2c357b] adding the github workflow file")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," 1"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," file"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," changed,"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 16"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," insertions"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"+"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," create"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," mode"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 100644"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .github/workflows/pipeline.yml")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," origin"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Enumerating"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," objects:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 6,"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," done.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Counting"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," objects:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 100%"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (6/6), done.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Delta"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compression"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," using"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," up"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," to"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," threads")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Compressing"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," objects:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 100%"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (3/3), done.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Writing"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," objects:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 100%"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (5/5), 713 bytes | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"713.00"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," KiB/s,"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," done.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"Total"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 5"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (delta "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"), reused 0 ("),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"delta"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"), pack-reused 0")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"remote:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Resolving"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," deltas:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 100%"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (1/1), completed with 1 "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"local"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," object"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"To"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://github.com/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"your"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," githiub"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," profil"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e>"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"/saf-training-lab-environment")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"   199b158..c2c357b"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  main"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," -> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},">")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),a[21]||(a[21]=h('<p>Once we push our code, you can go to another tab in our browser, load up your personal code repository for the class content that you forked earlier, and check out the Actions tab to see your pipeline executing.</p><figure><img src="'+c+'" alt="The Pipeline Run" tabindex="0" loading="lazy"><figcaption>The Pipeline Run</figcaption></figure><p>Note the little green checkmark next to your pipeline run. This indicates that the pipeline has finished running. You may also see a yellow circle to indicate that the pipeline has not completed yet, or a red X mark to indicate an errr, depending on the status of your pipeline when you examine it.</p><p>If we click on the card for our pipeline run, we get more detail:</p><figure><img src="'+g+'" alt="The Workflow" tabindex="0" loading="lazy"><figcaption>The Workflow</figcaption></figure><p>You can see some info on the triggered run, including a card showing the job that we defined earlier. Clicking it gives us a view of the step we&#39;ve worked into our pipeline -- we can even see the stdout (terminal output) of running that step on the runner.</p><figure><img src="'+u+'" alt="The Job" tabindex="0" loading="lazy"><figcaption>The Job</figcaption></figure><p>Congratulations, you&#39;ve run a pipeline! Now we just need to make it do something useful for us.</p><details class="hint-container details"><summary>How Often Should I Push Code? Won&#39;t Each Push Trigger a Pipeline Run?</summary><p>It&#39;s up to you.</p><p>Some orchestration tools let you run pipelines locally, and in a real repo, you&#39;d probably want to do this on a branch other than the <code>main</code> one to keep it clean. But in practice it has been the authors&#39; experience that everyone winds up simply creating dozens of commits to the repo to trigger the pipeline and watch for the next spot where it breaks. There&#39;s nothing wrong with doing this.</p><p>For example, consider how many failed pipelines the author had while designing the test pipeline for this class, and how many of them involve fixing simple typos. . .</p><figure><img src="'+y+'" alt="No Big Deal!" tabindex="0" loading="lazy"><figcaption>No Big Deal!</figcaption></figure></details>',9))])}const B=r(A,[["render",m]]),f=JSON.parse(`{"path":"/courses/advanced/09.html","title":"9. GitHub Actions","lang":"en-US","frontmatter":{"order":9,"next":"10.md","title":"9. GitHub Actions","author":"Will Dower","headerDepth":3,"toc":{"levels":[2,5]},"description":"GitHub Actions Let's create a GitHub Action workflow to define our pipeline. The Workflow File Pipeline orchestration tools are usually configured in a predefined workflow file,...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9. GitHub Actions\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-25T00:16:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Will Dower\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/advanced/09.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"9. GitHub Actions"}],["meta",{"property":"og:description","content":"GitHub Actions Let's create a GitHub Action workflow to define our pipeline. The Workflow File Pipeline orchestration tools are usually configured in a predefined workflow file,..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-25T00:16:03.000Z"}],["meta",{"property":"article:author","content":"Will Dower"}],["meta",{"property":"article:modified_time","content":"2025-02-25T00:16:03.000Z"}]]},"git":{"createdTime":1656449910000,"updatedTime":1740442563000,"contributors":[{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":6},{"name":"wdower","username":"wdower","email":"will@dower.dev","commits":4,"url":"https://github.com/wdower"},{"name":"Will Dower","username":"","email":"wdow95@hotmail.com","commits":1},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":2},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":2},{"name":"p-oneil","username":"p-oneil","email":"poneil@mitre.org","commits":1,"url":"https://github.com/p-oneil"},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":1},{"name":"Joyce Quach","username":"","email":"jquach@mitre.org","commits":4}]},"readingTime":{"minutes":6.64,"words":1993},"filePathRelative":"courses/advanced/09.md","autoDesc":true}`);export{B as comp,f as data};
