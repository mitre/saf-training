import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as i,a as l,e,d as h,w as p,r,o as d}from"./app-Cw6QY_M_.js";const k={};function o(c,s){const a=r("RouteLink");return d(),t("div",null,[s[3]||(s[3]=i("h2",{id:"resources",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#resources"},[i("span",null,"Resources")])],-1)),s[4]||(s[4]=i("p",null,"Now that you have learned about making and running InSpec profiles, let's dig deeper into the mechanics of InSpec by learning about resources.",-1)),s[5]||(s[5]=i("h3",{id:"core-resources",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#core-resources"},[i("span",null,"Core Resources")])],-1)),i("p",null,[s[1]||(s[1]=e("As you saw in the ",-1)),h(a,{to:"/courses/beginner/"},{default:p(()=>[...s[0]||(s[0]=[e("Beginner class",-1)])]),_:1}),s[2]||(s[2]=e(', when writing InSpec code, many resources are automatically available because they come "batteries included" with InSpec.',-1))]),s[6]||(s[6]=l(`<ul><li>You can <a href="https://www.inspec.io/docs/reference/resources/" target="_blank" rel="noopener noreferrer">explore the core InSpec resources</a> on Chef&#39;s documentation website.</li><li>You can also <a href="https://github.com/inspec/inspec/tree/master/lib/inspec/resources" target="_blank" rel="noopener noreferrer">examine the source code</a> to see what&#39;s available. For example, you can see how <code>file</code> and other InSpec resources are implemented.</li></ul><h3 id="local-resources" tabindex="-1"><a class="header-anchor" href="#local-resources"><span>Local Resources</span></a></h3><p>Local resources are those that exist only in the profile in which they are developed. Local resources are put in the <code>libraries</code> directory:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> examples/profile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">examples/profile</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libraries</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> custom_resource.rb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that the <code>libraries</code> directory is not created by default within a profile when we use <code>inspec init</code>. We need to create the directory ourselves.</p><p>Once you create and populate a custom resource Ruby file inside the <code>libraries</code> directory, it can be utilized inside your local profile just like the core resources.</p><h3 id="resource-structure" tabindex="-1"><a class="header-anchor" href="#resource-structure"><span>Resource Structure</span></a></h3><p>Like InSpec controls, InSpec resources are written as regular Ruby classes, which means you have the full power of Ruby at your fingertips as you craft this resource.</p><p>In addition to the resource name, the following attributes can be configured:</p><ul><li><code>name</code> - Identifier of the resource (required)</li><li><code>desc</code> - Description of the resource (optional)</li><li><code>example</code> - Example usage of the resource (optional)</li><li><code>supports</code> - (Chef InSpec 2.0+) Platform restrictions of the resource (optional)</li></ul><p>The following methods are available to the resource:</p><ul><li><code>inspec</code> - Contains a registry of all other resources to interact with the operating system or target in general.</li><li><code>skip_resource</code> - A resource may call this method to indicate that requirements aren’t met. All tests that use this resource will be marked as skipped.</li></ul><h3 id="the-etc-hosts-example" tabindex="-1"><a class="header-anchor" href="#the-etc-hosts-example"><span>The <code>etc_hosts</code> example</span></a></h3><p>Let&#39;s look at a simple default resource to get an idea how these resources are used. We&#39;ll take a look at the <a href="https://github.com/inspec/inspec/blob/526b52657be571ba1573c12d666dc1f6330f2307/lib/inspec/resources/etc_hosts.rb" target="_blank" rel="noopener noreferrer">source code</a> for the InSpec resource that models an operating system&#39;s hostfile, which is a simple file where we can map IP addresses (e.g. 198.162.8.1) to domain names (e.g. my-heimdall-deployment.my-domain.dev) without having to add a record to a DNS server somewhere.</p><div class="language-ruby line-numbers-mode" data-highlighter="shiki" data-ext="ruby" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ruby"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;inspec/utils/parser&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;inspec/utils/file_reader&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">module</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Inspec::Resources</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EtcHosts</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Inspec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    name </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;etc_hosts&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    supports </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">platform</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;unix&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    supports </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">platform</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;windows&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Use the etc_hosts InSpec audit resource to find an</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ip_address and its associated hosts&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    example </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;&lt;~EXAMPLE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      describe etc_hosts.where { ip_address == &#39;127.0.0.1&#39; } do</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        its(&#39;ip_address&#39;) { should cmp &#39;127.0.0.1&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        its(&#39;primary_name&#39;) { should cmp &#39;localhost&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        its(&#39;all_host_names&#39;) { should eq [[&#39;localhost&#39;, &#39;localhost.localdomain&#39;, &#39;localhost4&#39;, &#39;localhost4.localdomain4&#39;]] }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      end</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    EXAMPLE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    attr_reader</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">params</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    include</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Inspec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Utils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">CommentParser</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    include</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> FileReader</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">    DEFAULT_UNIX_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/etc/hosts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">freeze</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">    DEFAULT_WINDOWS_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;C:\\windows\\system32\\drivers\\etc\\hosts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">freeze</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">hosts_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read_file_content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hosts_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> default_hosts_file_path)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      @params</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> parse_conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(content.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    FilterTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">register_column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">ip_address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,     </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ip_address&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">register_column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">primary_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;primary_name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">register_column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">all_host_names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;all_host_names&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">install_filter_methods_on_resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">params</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> to_s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;Hosts File&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    private</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> default_hosts_file_path</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      inspec.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">windows?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ?</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> DEFAULT_WINDOWS_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">DEFAULT_UNIX_PATH</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> parse_conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">lines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      lines.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">empty?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">comment?).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">parse_data).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">format_data)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> comment?</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      parse_options</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">comment_char</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;#&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">standalone_comments</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      -&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">parse_comment_line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data, parse_options).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">first</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">empty?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> parse_data</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      -&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { [data.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], data.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], data.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">..</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]] }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> format_data</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      -&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">%w{ip_address primary_name all_host_names}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">to_h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you&#39;ve ever done object-oriented programming, you might be seeing some familiar concepts in this resource file. Let&#39;s break down some of the subcomponents of the resource.</p><h4 id="require-lines-1-and-2" tabindex="-1"><a class="header-anchor" href="#require-lines-1-and-2"><span>require (lines 1 and 2)</span></a></h4><p>The <code>require</code> statement pulls in code written in other files or Ruby modules that we will use in this resource. In this case we are importing some simple utility functions defined elsewhere in the InSpec codebase.</p><h4 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>class</span></a></h4><p>The <code>class</code> is where a Ruby class definition is given. Classes define the structure and function of an object that we can instantiate to model something.</p><h4 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h4><p>The <code>name</code> defines what token we can use to invoke this resource within our controls. Remember all those <code>describe</code> blocks we wrote that invoked the <code>nginx</code> resource? We used the term <code>nginx</code> to invoke the resource because that token is the defined <code>name</code> of the resource in its class definition.</p><h4 id="supports" tabindex="-1"><a class="header-anchor" href="#supports"><span>supports</span></a></h4><p>The <code>supports</code> keyword is used to define what types of platforms should be able to use this resource. The example above only supports the Windows and Unix-based operating systems, but other resources could state that they only support specific cloud providers or specific Linux distro releases.</p><h4 id="desc" tabindex="-1"><a class="header-anchor" href="#desc"><span>desc</span></a></h4><p>A simple, human-friendly description of the purpose of this resource. This is also what gets printed when you run <code>&lt;resource&gt; help</code> in the InSpec shell.</p><h4 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>examples</span></a></h4><p>One or more simple sample usages of the resource. It typically consists of a <code>describe</code> block using the resource, given as a multi-line string via the squiggly <code>heredoc</code> syntax.</p><h4 id="private" tabindex="-1"><a class="header-anchor" href="#private"><span>private</span></a></h4><p>This is a keyword that asserts that every function definition that shows up below this line in the class file should be considered <em>private</em>, or not accessible to users who instantiate an object out of this class. For example, when using this resource in a control file, you cannot invoke the <code>parse_data</code> function, because it is a private function that should really only be invoked by the resource class itself when the object is first created.</p><h4 id="initialize-method" tabindex="-1"><a class="header-anchor" href="#initialize-method"><span>initialize method</span></a></h4><p>An <code>initialize</code> method is required if your resource needs to be able to accept a parameter when called in a test (e.g. the <code>file</code> resource takes in a string parameter that specifies the location of the file being examined: <code>file(&#39;this/path/is/a/parameter&#39;)</code>).</p><h4 id="functionality-methods" tabindex="-1"><a class="header-anchor" href="#functionality-methods"><span>functionality methods</span></a></h4><p>These methods return data from the resource so that you can use it in tests. There can be just a few of them, or there can be a whole bunch. These methods are how we define the custom matchers that can be invoked in an InSpec control file. We&#39;ll build some simple examples in the next section.</p>`,34))])}const y=n(k,[["render",o]]),A=JSON.parse(`{"path":"/courses/advanced/04.html","title":"4. Exploring InSpec Resources","lang":"en-US","frontmatter":{"order":4,"next":"05.md","title":"4. Exploring InSpec Resources","author":"Aaron Lippold","headerDepth":3,"toc":{"levels":[2,5]},"description":"Resources Now that you have learned about making and running InSpec profiles, let's dig deeper into the mechanics of InSpec by learning about resources. Core Resources As you sa...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. Exploring InSpec Resources\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-05T14:02:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/advanced/04.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"4. Exploring InSpec Resources"}],["meta",{"property":"og:description","content":"Resources Now that you have learned about making and running InSpec profiles, let's dig deeper into the mechanics of InSpec by learning about resources. Core Resources As you sa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-05T14:02:39.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-05T14:02:39.000Z"}]]},"git":{"createdTime":1656449910000,"updatedTime":1733407359000,"contributors":[{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":6},{"name":"wdower","username":"wdower","email":"will@dower.dev","commits":3,"url":"https://github.com/wdower"},{"name":"Will Dower","username":"","email":"wdow95@hotmail.com","commits":1},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":2},{"name":"Will","username":"Will","email":"will@dower.dev","commits":3,"url":"https://github.com/Will"},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":1}]},"readingTime":{"minutes":3.31,"words":992},"filePathRelative":"courses/advanced/04.md","autoDesc":true}`);export{y as comp,A as data};
