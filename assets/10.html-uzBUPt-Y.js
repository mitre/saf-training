import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as n}from"./app-Cw6QY_M_.js";const o="/saf-training/assets/stig_view-Cv2f3JgV.png",r="/saf-training/assets/stig_search-CQ4kPj5n.png",s="/saf-training/assets/satisfies-CyT4CZsy.png",c="/saf-training/assets/many_reqs-NVslxcpH.png",d="/saf-training/assets/RHEL-09-000005-c3433j_A.png",h="/saf-training/assets/RHEL-09-000006-BbSobWXk.png",l="/saf-training/assets/also_satisfies-Bd7qj3Gc.png",m="/saf-training/assets/selecting_also_satisfies-8j9FYGyQ.png",u="/saf-training/assets/already_satisfied-DXkmJJAG.png",p={};function g(f,e){return n(),a("div",null,[...e[0]||(e[0]=[i('<h2 id="_10-1-combining-and-adding-requirements" tabindex="-1"><a class="header-anchor" href="#_10-1-combining-and-adding-requirements"><span>10.1 Combining and Adding Requirements</span></a></h2><p>Remember how we said earlier that SRG requirements do not always have one-to-one equivalents in STIG documents? So far, we have noted that STIG requirements are distilled down from a more general SRG requirement. However, STIG authors often learn during the authorship process that a single STIG check will cover more than one SRG requirement, or that a single SRG requirement is better covered by several STIG checks. Therefore, in Vulcan, we sometimes need to indicate that one requirement in our security guidance covers multiple SRG controls, and sometimes we need to create a brand new requirement entirely.</p><h2 id="_10-2-checking-the-answer-key" tabindex="-1"><a class="header-anchor" href="#_10-2-checking-the-answer-key"><span>10.2 Checking the Answer Key</span></a></h2><p>Let&#39;s use the RHEL9 STIG -- the <em>real</em> RHEL9 STIG -- as an example. The RHEL9 STIG document is conveniently loaded into the training instance of Vulcan for us to examine. Check out the STIG option on the top navbar.</p><figure><img src="'+o+'" alt="Vulcan&#39;s STIG View" tabindex="0" loading="lazy"><figcaption>Vulcan&#39;s STIG View</figcaption></figure><p>You can filter for RHEL and select the published RHEL9 STIG for easy viewing. (If you are running your own Vulcan locally, your instance admin user is able to upload the raw XCCDF document for the STIG on the same tab.)</p><figure><img src="'+r+'" alt="Searching for STIGs" tabindex="0" loading="lazy"><figcaption>Searching for STIGs</figcaption></figure><p>On the side of the page we see a search bar we can use to find individual components. We, the instructors, already know a good example for what we&#39;re talking about, so let&#39;s go ahead and search for the real STIG identifier <code>RHEL-09-211020</code>.</p><figure><img src="'+s+'" alt="RHEL-09-211020" tabindex="0" loading="lazy"><figcaption>RHEL-09-211020</figcaption></figure><div class="hint-container note"><p class="hint-container-title">Wait, why does the real STIG use different IDs for each requirement?</p><p>Recall that the IDs for our requirements were automatically generated sequentially from the SRG. We noted that a real, published STIG will have DISA use its own formula to apply STIG IDs. Our numbers and theirs will not match one-to-one and that is not a problem for the purposes of this class.</p></div><p><code>RHEL-09-211020</code> states that &quot;RHEL 9 must display the Standard Mandatory DOD Notice and Consent Banner before granting local or remote access to the system via a command line user logon.&quot; If you&#39;ve ever logged into a government computer (or even most corporate ones) you&#39;ve probably seen a disclaimer like this that warns you that the organization owns this computer and you shouldn&#39;t put anything on it that you don&#39;t want to show up in a log aggregator.</p><p>The vulnerability discussion text states that this requirement <em>also</em> satisfies several other SRG requirements.</p><p>On our search bar, we can also switch to searching by SRG ID. Let&#39;s search for one of the SRG IDs we have already implemented in this class -- recall that our very own <code>RHEL-09-000004</code> requirement maps back to the upstream <code>SRG-OS-000021-GPOS-00005</code>. Let&#39;s search for that ID and see what the actual STIG authors for RHEL9 did for this one.</p><figure><img src="'+c+'" alt="Many STIG requirements to one SRG requirement" tabindex="0" loading="lazy"><figcaption>Many STIG requirements to one SRG requirement</figcaption></figure><p>We can see a whole bunch of STIG requirements that cover this SRG control. If we take a look at each in turn we&#39;ll see that each of them is a unique check for a different system setting in RHEL9 that, when taken in aggregate, satisfy <code>SRG-OS-000021-GPOS-00005</code>.</p><div class="hint-container note"><p class="hint-container-title">So how do I know which requirements are appropriate to combine or split apart?</p><p>There are no hard and fast rules for when we need to do this. It&#39;s up to you as the security guidance author to decide what makes a more logically organized document.</p><p>However, a good rule of thumb is that you should mark a STIG requirement as satisfying multiple SRG requirements when the STIG requirement&#39;s Check Text test would be necessary to run in order to satisfy a different SRG requirement. Similarly, if your Check Text procedure in one STIG requirement involves testing multiple discrete settings of a system, then you may wish to split them into multiple STIG requirements.</p></div><div class="hint-container warning"><p class="hint-container-title">Does that mean I can make just a few giant requirements in my security guidance to cover all the upstream SRG requirements?</p><p>No. We are <em>not</em> saying that you should combine all of your requirements together without putting some thought into it.</p><p>Remember that people other than you and your team will need to understand the requirements you write. When in doubt, don&#39;t combine requirements. It&#39;s better to have requirements that are too specific than not enough.</p></div><h2 id="_10-3-combining-requirements" tabindex="-1"><a class="header-anchor" href="#_10-3-combining-requirements"><span>10.3 Combining Requirements</span></a></h2><p>Now that we have poked around the real STIG for a while, let&#39;s discuss how to combine requirements in Vulcan.</p><h2 id="_10-3-1-the-also-satisfies-feature" tabindex="-1"><a class="header-anchor" href="#_10-3-1-the-also-satisfies-feature"><span>10.3.1 The &#39;Also Satisfies&#39; Feature</span></a></h2><p>Head back to your Component and make sure you are in editing mode. Let&#39;s take a look at requirement <code>RHEL-09-000005</code>.</p><figure><img src="'+d+'" alt="RHEL-09-000005" tabindex="0" loading="lazy"><figcaption>RHEL-09-000005</figcaption></figure><p>Looks familiar, right? This requirement is based off of the same SRG ID as the real STIG&#39;s banner text requirement.</p><p>Next, look at requirement <code>RHEL-09-000006</code>.</p><figure><img src="'+h+'" alt="RHEL-09-000006" tabindex="0" loading="lazy"><figcaption>RHEL-09-000006</figcaption></figure><p>This requirement also deals with the banner message. The only difference between this requirement and the previous one is that <code>RHEL-09-000005</code> is asking that the banner be displayed <em>whenever someone accesses the system</em> and <code>RHEL-09-000006</code> asking that the banner is displayed <em>until the user takes some action on the system</em>.</p><p>Both of these behaviors are in fact controlled by the same banner text file. In other words, we <em>cannot reasonably test requirement <code>RHEL-09-000005</code> without also testing requirement <code>RHEL-09-000006</code></em>. This means that requirement <code>RHEL-09-000005</code> also satisfies <code>RHEL-09-000006</code>. Let&#39;s mark this in Vulcan.</p><p>Ensure the component is in edit mode and set the Status to &quot;Applicable - Configurable&quot;. In the top right of the editing window for requirement <code>RHEL-09-000005</code> you will see a button labeled &#39;Also Satisfies&#39;:</p><figure><img src="'+l+'" alt="Also Satisfies" tabindex="0" loading="lazy"><figcaption>Also Satisfies</figcaption></figure><p>Select it and let&#39;s pick <code>RHEL-09-000006</code> in the search bar.</p><figure><img src="'+m+'" alt="Selecting the other satisfied requirement" tabindex="0" loading="lazy"><figcaption>Selecting the other satisfied requirement</figcaption></figure><p>If we head over to view <code>RHEL-09-000006</code>, we see that it is not editable, because we indicated that another requirement already satisfies it. We also see a little indicator of this relationship next to each requirement in the list on the left-hand side.</p><figure><img src="'+u+'" alt="Already Satisfied" tabindex="0" loading="lazy"><figcaption>Already Satisfied</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>The requirement <em>must</em> have its status set to &quot;Applicable - Configurable&quot; for the &quot;Also Satisfies&quot; add button to appear. The feature does not make sense in the context of any other status.</p></div>',34)])])}const b=t(p,[["render",g]]),S=JSON.parse('{"path":"/courses/guidance/10.html","title":"10. Combining Requirements","lang":"en-US","frontmatter":{"order":10,"next":"11.md","title":"10. Combining Requirements","author":"Will Dower","headerDepth":3,"toc":{"levels":[2,5]},"description":"10.1 Combining and Adding Requirements Remember how we said earlier that SRG requirements do not always have one-to-one equivalents in STIG documents? So far, we have noted that...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. Combining Requirements\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T03:46:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Will Dower\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/guidance/10.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"10. Combining Requirements"}],["meta",{"property":"og:description","content":"10.1 Combining and Adding Requirements Remember how we said earlier that SRG requirements do not always have one-to-one equivalents in STIG documents? So far, we have noted that..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T03:46:43.000Z"}],["meta",{"property":"article:author","content":"Will Dower"}],["meta",{"property":"article:modified_time","content":"2024-12-02T03:46:43.000Z"}]]},"git":{"createdTime":1698897636000,"updatedTime":1733111203000,"contributors":[{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":2,"url":"https://github.com/wdower"},{"name":"em-c-rod","username":"em-c-rod","email":"32680215+em-c-rod@users.noreply.github.com","commits":3,"url":"https://github.com/em-c-rod"},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":2},{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mitre.org","commits":1}]},"readingTime":{"minutes":3.64,"words":1093},"filePathRelative":"courses/guidance/10.md","autoDesc":true}');export{b as comp,S as data};
