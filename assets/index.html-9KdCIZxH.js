import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as n,o as a}from"./app-Cw6QY_M_.js";const s={};function o(r,e){return a(),i("div",null,[...e[0]||(e[0]=[n('<p>üìö <strong>Difficulty Level</strong>: Intermediate<br> ‚è±Ô∏è <strong>Estimated Time</strong>: 2-3 hours</p><h2 id="learning-objectives" tabindex="-1"><a class="header-anchor" href="#learning-objectives"><span>Learning Objectives</span></a></h2><p>By the end of this class, you will be able to:</p><ul><li>Build and validate InSpec profiles using Test Kitchen</li><li>Configure local testing environments for security compliance</li><li>Execute tests using Docker and AWS environments</li><li>Implement continuous testing workflows</li><li>Troubleshoot common profile development issues</li></ul><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><p>Before starting this class, ensure you have:</p><ul><li>Basic knowledge of Ruby (<a href="https://ruby-lang.org/en/documentation/quickstart/" target="_blank" rel="noopener noreferrer">Learn Ruby Basics</a>)</li><li>Docker or Podman installed (<a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener noreferrer">Docker Installation Guide</a>)</li><li>AWS Free Tier account (optional) (<a href="https://aws.amazon.com/free/" target="_blank" rel="noopener noreferrer">AWS Sign Up</a>)</li><li>Platform One account (<a href="https://login.dso.mil/" target="_blank" rel="noopener noreferrer">P1 Registration</a>)</li><li>Git installed (<a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noopener noreferrer">Git Setup Guide</a>)</li></ul><h2 id="skills-assessment" tabindex="-1"><a class="header-anchor" href="#skills-assessment"><span>Skills Assessment</span></a></h2><p>Before proceeding, verify you can:</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> Run basic Ruby commands</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> Execute Docker containers</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> Use Git for version control</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> Navigate command line interfaces</label></li></ul><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The development and testing of InSpec validation profiles can be accomplished using a variety of tools working in concert, including Ruby, the Test Kitchen suite, the InSpec compliance language itself, Ansible, Docker, and shell scripting (bash/zsh). To contribute with Pull Requests and fixes, you&#39;ll need to set up your local test suite by following the instructions provided below.</p><h3 id="key-tools-explained" tabindex="-1"><a class="header-anchor" href="#key-tools-explained"><span>Key Tools Explained</span></a></h3><ul><li><strong>Test Kitchen</strong>: Integration testing framework <ul><li>Example: <code>kitchen test</code> validates your InSpec profiles</li><li>Use case: Automated compliance testing</li></ul></li><li><strong>Docker/Podman</strong>: Container runtime platforms <ul><li>Example: <code>docker run</code> creates isolated test environments</li><li>Use case: Consistent testing across platforms</li></ul></li><li><strong>InSpec</strong>: Compliance testing framework <ul><li>Example: <code>inspec exec</code> runs compliance checks</li><li>Use case: Security automation</li></ul></li><li><strong>Platform One</strong>: DoD&#39;s DevSecOps platform <ul><li>Example: Using hardened containers</li><li>Use case: Secure development environments</li></ul></li></ul><h2 id="development-workflow" tabindex="-1"><a class="header-anchor" href="#development-workflow"><span>Development Workflow</span></a></h2><p>Our development and testing workflow is managed by Test Kitchen. This tool is integral to our GitHub Actions CI/CD Pipelines and is also used for local development, testing, and releasing updates, patches, and full releases of the profile.</p><div class="hint-container tip"><p class="hint-container-title">Walk before you run!</p><p>When starting out, focus on Docker-based testing before moving to AWS environments.</p></div><h3 id="testing-environments" tabindex="-1"><a class="header-anchor" href="#testing-environments"><span>Testing Environments</span></a></h3><p>Test Kitchen uses Docker (or Podman, if preferred) and AWS (using free-tier resources) for testing. We provide example files for testing on a local Vagrant Red Hat (or other RHEL variant) box in the repository.</p><h3 id="platform-one-integration" tabindex="-1"><a class="header-anchor" href="#platform-one-integration"><span>Platform One Integration</span></a></h3><p>Additionally, Test Kitchen uses images from Platform One during the hardened container test of the testing suite. In order for you to use them as well, you&#39;ll need to set up and log in to your P1 account (free but requires registration), then obtain a CLI token to pull the Platform One Iron Bank images into the test suite.</p><div class="hint-container important"><p class="hint-container-title">Secrets should be secret!</p><p>Ensure you keep your P1 CLI token secure and never commit it to version control.</p></div><h2 id="getting-started-with-examples" tabindex="-1"><a class="header-anchor" href="#getting-started-with-examples"><span>Getting Started with Examples</span></a></h2><p>This guide refers to the <a href="https://github.com/mitre/redhat-enterprise-linux-8-stig-baseline/tree/metzger_dynamic_inputs" target="_blank" rel="noopener noreferrer">MITRE RedHat Enterprise Linux 8 STIG</a> profile, which provides a working example of the workflow described here.</p><div class="hint-container note"><p class="hint-container-title">Development vs Releases</p><p>Development happens in the <code>main</code> branch, with stable versions available as tagged releases.</p></div><h3 id="hands-on-practice" tabindex="-1"><a class="header-anchor" href="#hands-on-practice"><span>Hands-on Practice</span></a></h3><p>If you would like to follow along, experiment with the workflows, and understand the process described here, feel free to fork or clone the repository above. Follow the setup and configuration steps in the next section to input your own credentials and accounts, and learn as you go!</p><h2 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps"><span>Next Steps</span></a></h2><p>After setting up your environment, proceed to the next section to learn about specific testing patterns and workflows.</p>',29)])])}const p=t(s,[["render",o]]),d=JSON.parse('{"path":"/courses/profile-dev-test/","title":"1. Developing & Testing InSpec Profiles","lang":"en-US","frontmatter":{"order":1,"next":"02.md","title":"1. Developing & Testing InSpec Profiles","author":"Aaron Lippold","description":"üìö Difficulty Level: Intermediate ‚è±Ô∏è Estimated Time: 2-3 hours Learning Objectives By the end of this class, you will be able to: Build and validate InSpec profiles using Test K...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Developing & Testing InSpec Profiles\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-13T07:56:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/profile-dev-test/"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"1. Developing & Testing InSpec Profiles"}],["meta",{"property":"og:description","content":"üìö Difficulty Level: Intermediate ‚è±Ô∏è Estimated Time: 2-3 hours Learning Objectives By the end of this class, you will be able to: Build and validate InSpec profiles using Test K..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-13T07:56:22.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-13T07:56:22.000Z"}]]},"git":{"createdTime":1704493101000,"updatedTime":1734076582000,"contributors":[{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":4},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":1},{"name":"Will","username":"Will","email":"will@dower.dev","commits":1,"url":"https://github.com/Will"}]},"readingTime":{"minutes":1.9,"words":571},"filePathRelative":"courses/profile-dev-test/README.md","autoDesc":true}');export{p as comp,d as data};
