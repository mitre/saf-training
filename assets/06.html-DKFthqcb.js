import{_ as t}from"./Vulcan_Menu-C0C0Krzh.js";import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as i}from"./app-Cw6QY_M_.js";const r="/saf-training/assets/create_component-DSuQULvd.png",s="/saf-training/assets/created_component-C60QtUek.png",l="/saf-training/assets/open_component-DSMgUD9z.png",c="/saf-training/assets/component_view-Bojo3MhH.png",p="/saf-training/assets/component_metadata-C6W3tOeq.png",u={};function m(d,e){return i(),n("div",null,[...e[0]||(e[0]=[a('<h2 id="_6-1-components" tabindex="-1"><a class="header-anchor" href="#_6-1-components"><span>6.1 Components</span></a></h2><p>We have our project created and have allowed access to everyone who needs it. Now let&#39;s create ourselves a Component.</p><h3 id="_6-1-1-consider-your-component-s-requirements" tabindex="-1"><a class="header-anchor" href="#_6-1-1-consider-your-component-s-requirements"><span>6.1.1 Consider Your Component&#39;s Requirements</span></a></h3><p>The first thing we need to do when building a Component is determine what set of requirements applies to it.</p><p>A helpful question to keep in mind for this decision is <strong>&quot;What is the <em>purpose</em> of the software you are securing? What is its role?&quot;</strong> This will determine what guidance document we want to use as a foundation for our content.</p><h3 id="_6-1-2-choosing-a-foundation" tabindex="-1"><a class="header-anchor" href="#_6-1-2-choosing-a-foundation"><span>6.1.2 Choosing a Foundation</span></a></h3><p>Let&#39;s take a look at the options we have for a foundation.</p><p>You&#39;ll see options in the top navbar of Vulcan for &quot;SRGs&quot; and &quot;STIGs.&quot; These links lead to the lists of security guidance documents already saved to Vulcan. We can use any of these as a template for our own content.</p><p>At the top of the page, click the &quot;SRGs&quot; button.</p><figure><img src="'+t+'" alt="Vulcan Navbar" tabindex="0" loading="lazy"><figcaption>Vulcan Navbar</figcaption></figure><p>We have pre-loaded this Vulcan instance with a few SRGs to get us started. Since we&#39;re writing content for the RHEL9 operating system, we&#39;re going to want to use the General Purpose Operating System Security Requirements Guide.</p><div class="hint-container note"><p class="hint-container-title">DISA and SRG selection</p><p>Note that if you intend to formally publish your STIG, DISA will tell you which one to use based off the description of your software that you give them.</p></div><div class="hint-container tip"><p class="hint-container-title">Application STIGs</p><p>Applications (as opposed to software like operating systems, webservers and routers) that undergo the STIG process all should be using the Application Security and Development STIG as a foundation document.</p><p>Remember that a STIG can itself be used as the foundation for a tailored security baseline document!</p></div><h2 id="_6-2-creating-a-component-for-your-project" tabindex="-1"><a class="header-anchor" href="#_6-2-creating-a-component-for-your-project"><span>6.2 Creating a Component for Your Project</span></a></h2><p>Let&#39;s create a new Component to track our RHEL9 work.</p><ol><li>Go to your project page and select the &quot;Components&quot; tab.</li><li>Click &quot;Create a New Component.&quot;</li></ol><figure><img src="'+r+'" alt="Creating The Component" tabindex="0" loading="lazy"><figcaption>Creating The Component</figcaption></figure><p>Here, you&#39;ll select the SRG we decided on earlier.</p><ol start="3"><li>Fill out some metadata for the Component. <ul><li>Base SRG</li><li>Component Name</li><li>Version and Release (since this is a brand-new component we will use &quot;1&quot; for both)</li><li>STIG ID prefix</li><li>Title</li><li>Description*</li><li>Point of Contact*</li><li>Slack Channel ID*</li></ul></li></ol><p>*Optional.</p><div class="hint-container note"><p class="hint-container-title">STIG ID Prefixes</p><p>If you intend to formally publish your STIG, DISA will eventually assign these for you. These are just a placeholder value for now to allow us to track requirements inside Vulcan itself.</p></div><ol start="4"><li>Once you&#39;re done, click &quot;Create Component.&quot; You&#39;ll see a card added to your project to represent your new Component.</li></ol><figure><img src="'+s+'" alt="New Component" tabindex="0" loading="lazy"><figcaption>New Component</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">Other Ways of Loading Components</p><p>Vulcan allows you to import Components as well as creating them brand-new. You are able to load from your own released Components in your Vulcan instance, or even from a spreadsheet.</p></div><h2 id="_6-3-examining-the-component" tabindex="-1"><a class="header-anchor" href="#_6-3-examining-the-component"><span>6.3 Examining the Component</span></a></h2><p>Let&#39;s crack open what we just created. Click the &quot;Open Component&quot; button.</p><figure><img src="'+l+'" alt="An Open Component" tabindex="0" loading="lazy"><figcaption>An Open Component</figcaption></figure><h3 id="_6-3-1-layout-of-the-component-view" tabindex="-1"><a class="header-anchor" href="#_6-3-1-layout-of-the-component-view"><span>6.3.1 Layout of the Component View</span></a></h3><p>The page should look something like this:</p><figure><img src="'+c+'" alt="Inside the Component" tabindex="0" loading="lazy"><figcaption>Inside the Component</figcaption></figure><p>On the right-hand side of the Vulcan window, if we don&#39;t have a requirement selected, we can see metadata about the overall Component, including an edit history.</p><figure><img src="'+p+'" alt="Component Metadata" tabindex="0" loading="lazy"><figcaption>Component Metadata</figcaption></figure><p>On the left side of the page, scroll down to the section titled &quot;All Controls&quot;. These are all of the requirements in the SRG we selected earlier.</p><p>The left-hand side of the Vulcan window shows us the list of each requirement in the Component, and can be filtered by keyword, control status (which we will discuss in the next section) or review status. Note that each control is labeled with the STIG ID prefix that you gave this Component earlier. You can click on the requirement IDs in this view to see their contents.</p><p>When first created, a new Component&#39;s requirements will be an exact one-to-one copy of the requirements in the SRG or other underlying document we used as a foundation. Our job is to edit these controls to make them <em>specific</em>, <em>actionable</em> implementation guidance.</p><div class="hint-container warning"><p class="hint-container-title">Will I always have a single SRG requirement map to a single STIG-Ready requirement?</p><p>Not necessarily. During your work on this document, you may realize that a single configuration action that you can take on the system will cover multiple upstream SRG requirements.</p><p>Vulcan&#39;s &#39;Also Satisfies&#39; feature can be used to cover this case. For starters, though, the Component simply generates a one-to-one set of requirements from the SRG.</p></div>',36)])])}const w=o(u,[["render",m]]),y=JSON.parse(`{"path":"/courses/guidance/06.html","title":"6. Components Of a Vulcan Project","lang":"en-US","frontmatter":{"order":6,"next":"07.md","title":"6. Components Of a Vulcan Project","author":"Will Dower","headerDepth":3,"toc":{"levels":[2,5]},"description":"6.1 Components We have our project created and have allowed access to everyone who needs it. Now let's create ourselves a Component. 6.1.1 Consider Your Component's Requirements...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6. Components Of a Vulcan Project\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T03:46:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Will Dower\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/guidance/06.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"6. Components Of a Vulcan Project"}],["meta",{"property":"og:description","content":"6.1 Components We have our project created and have allowed access to everyone who needs it. Now let's create ourselves a Component. 6.1.1 Consider Your Component's Requirements..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T03:46:43.000Z"}],["meta",{"property":"article:author","content":"Will Dower"}],["meta",{"property":"article:modified_time","content":"2024-12-02T03:46:43.000Z"}]]},"git":{"createdTime":1698171733000,"updatedTime":1733111203000,"contributors":[{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":3,"url":"https://github.com/wdower"},{"name":"ssayed118","username":"ssayed118","email":"sumaasayed@mitre.org","commits":2,"url":"https://github.com/ssayed118"},{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mitre.org","commits":2},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":3},{"name":"em-c-rod","username":"em-c-rod","email":"32680215+em-c-rod@users.noreply.github.com","commits":3,"url":"https://github.com/em-c-rod"}]},"readingTime":{"minutes":2.58,"words":774},"filePathRelative":"courses/guidance/06.md","autoDesc":true}`);export{w as comp,y as data};
