import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,b as i,d as t,a as r,w as n,r as d,o as c,e}from"./app-Cw6QY_M_.js";const g={};function y(m,s){const o=d("FlowChart"),h=d("CodeTabs");return c(),k("div",null,[s[12]||(s[12]=i("h2",{id:"profile-dependencies-and-overlays",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#profile-dependencies-and-overlays"},[i("span",null,"Profile Dependencies and Overlays")])],-1)),s[13]||(s[13]=i("p",null,"In addition to its own controls, an InSpec profile can leverage controls from one or more other InSpec profiles.",-1)),s[14]||(s[14]=i("p",null,`When a profile depends on controls from other profiles, it can be referred to as an "overlay" or "wrapper" profile. We'll use the term overlay profile in this section.`,-1)),s[15]||(s[15]=i("p",null,"An overlay can include all, select specific, skip some, or modify controls it uses from the profiles it is depending on.",-1)),t(o,{code:"eJzLL0stykmstLXLL0gtSizJzM+zUsitjM9Lz8yriIdKcqXa2qXmpSAkuLhSde1gkgBOZBhH",preset:"vue"}),s[16]||(s[16]=r(`<p>To recap, here are the controls that are in the <code>my_nginx</code> profile that will test our five original requirements:</p><div class="language-ruby line-numbers-mode" data-highlighter="shiki" data-ext="ruby" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ruby"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">control </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx-version&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  impact </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  title </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NGINX version&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;The required version of NGINX should be installed.&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  describe nginx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    its</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;version&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { should cmp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx_version&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">control </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx-modules&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  impact </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  title </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NGINX modules&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;The required NGINX modules should be installed.&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  required_modules</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx_modules&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  describe nginx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    required_modules.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">each</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">required_module</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      its</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;modules&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { should </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> required_module }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">control </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx-conf-file&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  impact </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  title </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NGINX configuration file&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;The NGINX config file should exist.&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  describe </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/etc/nginx/nginx.conf&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should be_file }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">control </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx-conf-perms&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  impact </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  title </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NGINX configuration permissions&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  describe </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/etc/nginx/nginx.conf&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should be_owned_by </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;root&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should be_grouped_into </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;root&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should_not be_readable.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;others&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should_not be_writable.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;others&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should_not be_executable.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;others&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">control </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;nginx-shell-access&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  impact </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  title </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NGINX shell access&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  desc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;The NGINX shell access should be restricted to admin users.&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  describe users.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">shells</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/bash/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">usernames</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it { should be_in </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;admin_users&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="creating-the-overlay" tabindex="-1"><a class="header-anchor" href="#creating-the-overlay"><span>Creating the Overlay</span></a></h3><h4 id="mini-quiz-do-you-remember-how-to-initialize-a-profile" tabindex="-1"><a class="header-anchor" href="#mini-quiz-do-you-remember-how-to-initialize-a-profile"><span>Mini Quiz: Do you remember how to initialize a profile?</span></a></h4><details class="hint-container details"><summary>How to initialize the overlay</summary><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> profile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx_overlay</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The terminal output should look like the following:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> profile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/my_nginx_overlay</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> controls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> controls/example.rb</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inspec.yml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>In this example, we will rename the <code>example.rb</code> to <code>overlay.rb</code> to avoid confusion.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_nginx_overlay</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Which should look like:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      my_nginx_overlay</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> controls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> overlay.rb</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inspec.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="defining-the-profile-dependency" tabindex="-1"><a class="header-anchor" href="#defining-the-profile-dependency"><span>Defining the Profile Dependency</span></a></h3><p>For a profile to use controls from another profile, the dependency needs to be included in the <code>depends</code> section of the overlay&#39;s <code>inspec.yml</code> file. For example, you can develop <code>my_nginx_overlay</code> that uses controls from the <code>my_nginx</code> profile. In this case, the <code>depends</code> section of <code>inspec.yml</code> of <code>my_nginx_overlay</code> should list the name and location of <code>my_nginx</code>. One way of declaring the dependency is:</p>`,12)),t(h,{data:[{id:"my_nginx_overlay/inspec.yml"}]},{title0:n(({value:a,isActive:l})=>[...s[0]||(s[0]=[e("my_nginx_overlay/inspec.yml",-1)])]),tab0:n(({value:a,isActive:l})=>[...s[1]||(s[1]=[i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-yaml"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx_overlay")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Metadata")]),e(`
`),i("span",{class:"line"}),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"depends"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  - "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    path"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"my_nginx"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," # {path relative to the overlay}")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),s[17]||(s[17]=r('<p>Once defined in the <code>inspec.yml</code> file, controls from the included profiles can be used!</p><div class="hint-container info"><p class="hint-container-title">More dependency info</p><p>Note that a dependency definition can lead to an HTTP/S path or a .git link, just like how <code>inspec exec</code> can reference profiles that live on the network.</p><p>See the docs&#39; <a href="https://www.inspec.io/docs/reference/profiles/#sts=Profile%20Dependencies" target="_blank" rel="noopener noreferrer">Profile Dependencies</a> section for details.</p></div><h3 id="including-all-controls" tabindex="-1"><a class="header-anchor" href="#including-all-controls"><span>Including All Controls</span></a></h3><p>After defining the dependency in the <code>inspec.yml</code> of <code>my_nginx_overlay</code>, controls from <code>my_nginx</code> are available to be used in the overlay. By using <code>include_controls &lt;profile&gt;</code> in the <code>overlay.rb</code> of the overlay profile, all controls from the named profile will be executed every time the overlay is executed. Below you can see an example of an <code>overlay.rb</code> file in the <code>controls</code> folder of the overlay.</p>',4)),t(h,{data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:n(({value:a,isActive:l})=>[...s[2]||(s[2]=[e("my_nginx_overlay/controls/overlay.rb",-1)])]),tab0:n(({value:a,isActive:l})=>[...s[3]||(s[3]=[i("div",{class:"language-ruby line-numbers-mode","data-highlighter":"shiki","data-ext":"ruby",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ruby"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"include_controls "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'my_nginx'")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])]),_:1}),s[18]||(s[18]=r('<p>In the example above, every time <code>my_nginx_overlay</code> profile is executed, all the controls from <code>my_nginx</code> profile are also executed. Therefore, the following controls would be executed for <code>my_nginx_overlay</code>:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✓</td></tr><tr><td>nginx-conf-perms</td><td>✓</td></tr><tr><td>nginx-shell-access</td><td>✓</td></tr></tbody></table><h3 id="skipping-a-control" tabindex="-1"><a class="header-anchor" href="#skipping-a-control"><span>Skipping a Control</span></a></h3><p>What if you don&#39;t want to run one of the controls from the included profile? Luckily, it is not necessary to maintain a slightly-modified copy of the included profile just to delete a control. The <code>skip_control</code> command tells InSpec not to run a particular control.</p>',4)),t(h,{data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:n(({value:a,isActive:l})=>[...s[4]||(s[4]=[e("my_nginx_overlay/controls/overlay.rb",-1)])]),tab0:n(({value:a,isActive:l})=>[...s[5]||(s[5]=[i("div",{class:"language-ruby line-numbers-mode","data-highlighter":"shiki","data-ext":"ruby",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ruby"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"include_controls "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'my_nginx'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  skip_control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-conf-perms'")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"end")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),s[19]||(s[19]=r('<p>In the above example, all controls from <code>my_nginx</code> profile will be executed, <strong>except</strong> for control <code>nginx-conf-perms</code>, every time <code>my_nginx_overlay</code> is executed. Therefore, the following controls will be executed for <code>my_nginx_overlay</code>:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✓</td></tr><tr><td>nginx-conf-perms</td><td>✗</td></tr><tr><td>nginx-shell-access</td><td>✓</td></tr></tbody></table><h3 id="selectively-including-controls" tabindex="-1"><a class="header-anchor" href="#selectively-including-controls"><span>Selectively Including Controls</span></a></h3><p>If there are only a handful of controls that should be executed from an included profile, it’s not necessary to skip all the unneeded controls, or worse, copy/paste those controls bit-for-bit into your profile. Instead, use the <code>require_controls</code> command.</p><div class="hint-container warning"><p class="hint-container-title">Keep profiles in sync!</p><p>Copying and pasting controls from a profile, instead of creating an overlay, can lead to important updates from the upstream profile not being reflected in the new one. Overlays keep the profile changes in sync as they pull the latest updates from upstream before running.</p></div>',5)),t(h,{data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:n(({value:a,isActive:l})=>[...s[6]||(s[6]=[e("my_nginx_overlay/controls/overlay.rb",-1)])]),tab0:n(({value:a,isActive:l})=>[...s[7]||(s[7]=[i("div",{class:"language-ruby line-numbers-mode","data-highlighter":"shiki","data-ext":"ruby",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ruby"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"require_controls "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'my_nginx'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-version'")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-modules'")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"end")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),s[20]||(s[20]=r('<p>Whenever <code>my_nginx_overlay</code> is executed, it will run only the controls from <code>my_nginx</code> that are specified in the <code>require_controls</code> block. In the case, the following controls would be executed:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✗</td></tr><tr><td>nginx-conf-perms</td><td>✗</td></tr><tr><td>nginx-shell-access</td><td>✗</td></tr></tbody></table><p>Controls <code>nginx-conf-file</code>, <code>nginx-conf-perms</code>, and <code>nginx-shell-access</code> would not be executed, just as if they were manually skipped. This method of including specific controls ensures only the controls specified are executed.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>If new controls are added to a later version of <code>my_nginx</code>, they would not be executed unless explicitly required in this scenario.</p></div><h3 id="modifying-a-control" tabindex="-1"><a class="header-anchor" href="#modifying-a-control"><span>Modifying a Control</span></a></h3><p>Let’s say a particular control from an included profile should still run, but the impact level set in the control isn’t appropriate. When a control is included or required, it can also be modified!</p>',6)),t(h,{data:[{id:"include_controls"},{id:"require_controls"}]},{title0:n(({value:a,isActive:l})=>[...s[8]||(s[8]=[e("include_controls",-1)])]),title1:n(({value:a,isActive:l})=>[...s[9]||(s[9]=[e("require_controls",-1)])]),tab0:n(({value:a,isActive:l})=>[...s[10]||(s[10]=[i("div",{class:"language-ruby line-numbers-mode","data-highlighter":"shiki","data-ext":"ruby",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ruby"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"include_controls "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'my_nginx'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-modules'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    impact "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0.5")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  end")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"end")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:n(({value:a,isActive:l})=>[...s[11]||(s[11]=[i("div",{class:"language-ruby line-numbers-mode","data-highlighter":"shiki","data-ext":"ruby",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ruby"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"require_controls "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'my_nginx'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-modules'"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," do")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    impact "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0.5")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  end")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  control "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'nginx-conf-file'")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"end")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),s[21]||(s[21]=r('<p>In the above example, all included or required controls from <code>my_nginx</code> profile are executed. However, should control <code>nginx-modules</code> fail, it will be raised with an impact of <code>0.5</code> instead of the originally-intended impact of <code>1.0</code>.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Any fields that you <em>do not</em> explicitly modify in an included control will not be changed from the baseline.</p><p>Therefore, you can import a control and only override a single field like the <code>impact</code> while leaving the actual control code and the rest of the metadata tags untouched.</p></div><h3 id="additional-examples" tabindex="-1"><a class="header-anchor" href="#additional-examples"><span>Additional Examples</span></a></h3><p>Let&#39;s poke around a few more examples of inheritance.</p><ul><li><a href="https://github.com/mitre/helloworld-web-baseline" target="_blank" rel="noopener noreferrer">Sample Hello World Web </a></li><li><a href="https://github.com/mitre/sample-rhel8-overlay" target="_blank" rel="noopener noreferrer">Sample RHEL8 Overlay </a></li><li><a href="https://github.com/mitre/sample-mysql-overlay" target="_blank" rel="noopener noreferrer">Sample MySQL Overlay </a></li><li><a href="https://github.com/mitre/aws-rds-oracle-database-19c-cis-baseline" target="_blank" rel="noopener noreferrer">AWS RDS Oracle 19c </a> (Advanced)</li></ul><div class="hint-container note"><p class="hint-container-title">Cloud environment overlays</p><p>MITRE SAF&#39;s <a href="https://saf.mitre.org/libs/validation" target="_blank" rel="noopener noreferrer">Validation library</a> includes several AWS RDS overlays for common databases. Cloud environment deployment often requires an overlay to be written for the underlying technology. For example, suddenly every system has a CSP-default account (e.g. <code>ec2-user</code>).</p></div>',6))])}const v=p(g,[["render",y]]),b=JSON.parse('{"path":"/courses/beginner/10.html","title":"10. Profile Dependencies and Overlays","lang":"en-US","frontmatter":{"order":10,"next":"11.md","title":"10. Profile Dependencies and Overlays","author":"Aaron Lippold","headerDepth":3,"toc":{"levels":[2,5]},"description":"Profile Dependencies and Overlays In addition to its own controls, an InSpec profile can leverage controls from one or more other InSpec profiles. When a profile depends on cont...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. Profile Dependencies and Overlays\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-09T16:39:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/beginner/10.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"10. Profile Dependencies and Overlays"}],["meta",{"property":"og:description","content":"Profile Dependencies and Overlays In addition to its own controls, an InSpec profile can leverage controls from one or more other InSpec profiles. When a profile depends on cont..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-09T16:39:22.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-09T16:39:22.000Z"}]]},"git":{"createdTime":1653259416000,"updatedTime":1733762362000,"contributors":[{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":3},{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":5},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":21},{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":3,"url":"https://github.com/wdower"},{"name":"Amndeep Singh Mann","username":"","email":"amann@mitre.org","commits":6},{"name":"p-oneil","username":"p-oneil","email":"poneil@mitre.org","commits":1,"url":"https://github.com/p-oneil"},{"name":"Will","username":"Will","email":"will@dower.dev","commits":1,"url":"https://github.com/Will"}]},"readingTime":{"minutes":4.11,"words":1234},"filePathRelative":"courses/beginner/10.md","autoDesc":true}');export{v as comp,b as data};
