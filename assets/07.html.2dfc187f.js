import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";import{r as n,o as c,c as a,a as o,b as i,F as u,d as r,e}from"./app.3b4d192a.js";const l={},d=r(`<h3 id="_7-1-local-resource" tabindex="-1"><a class="header-anchor" href="#_7-1-local-resource" aria-hidden="true">#</a> 7.1. Local Resource</h3><p>Local resources exist only in the profile they are developed in. As was shown in the previous example, a local resource would be placed in the <code>libraries</code> directory</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ tree examples/profile
examples/profile
<span class="token punctuation">..</span>.
\u251C\u2500\u2500 libraries
\u2502   \u2514\u2500\u2500 custom_resource.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>From there you would develop your custom resource <code>custom_resource.rb</code> and be able to utilize the resource within that profile.</p><h3 id="_7-2-built-in-inspec-resource" tabindex="-1"><a class="header-anchor" href="#_7-2-built-in-inspec-resource" aria-hidden="true">#</a> 7.2. Built-in InSpec Resource</h3><p>Sometimes when working on resources you may find a gap in InSpec where a resource doesn&#39;t exist where it should. In a situation such as that you may want to develop a resource for upstream InSpec in Github. When developing a resource for InSpec you touch a few more files than just the <code>custom_resource.rb</code> as mentioned before.</p>`,6),h=e("First you would have to fork a copy of the "),p={href:"https://github.com/inspec/inspec",target:"_blank",rel:"noopener noreferrer"},m=e("InSpec Github Repo"),_=e(" to make the necessary changes to the repository."),b=r("<p>The following directories are the ones you would want to change:</p><p>For the actual resource you can place it in <code>lib/inspec/resources/</code>.</p><p>You have to add your new resource to the helper file in <code>lib/inspec/resources.rb</code></p><p>Then you have to write out your integration tests for the resource in this directory <code>test/integration/default/controls/</code></p><p>Next you are required to write the unit tests for your new resource here <code>test/unit/resources/</code></p><p>Finally, you will have to write up the documentation that will be put up on InSpec&#39;s official doc page here <code>docs/resources/</code></p>",6);function f(v,y){const t=n("ExternalLinkIcon");return c(),a(u,null,[d,o("p",null,[h,o("a",p,[m,i(t)]),_]),b],64)}var x=s(l,[["render",f],["__file","07.html.vue"]]);export{x as default};
