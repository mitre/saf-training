import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as i,o as s}from"./app-Cw6QY_M_.js";const r={};function c(l,e){return s(),o("div",null,[...e[0]||(e[0]=[i("<p>In this exercise, you will practice writing your own resources and consider how you could implement them in a profile.</p><p><strong>Suggested Simple Resources to Start With:</strong></p><ul><li><p><strong>Docker</strong></p><ul><li><code>id</code>: Retrieves the container ID.</li><li><code>image</code>: Retrieves the image name.</li><li><code>repo</code>: Retrieves the repository name.</li><li><code>tag</code>: Retrieves the tag.</li><li><code>ports</code>: Retrieves the ports.</li><li><code>command</code>: Retrieves the command.</li></ul></li><li><p><strong>Git</strong></p><ul><li><code>branches</code>: Checks if a branch exists.</li><li><code>current_branch</code>: Retrieves the current branch.</li><li><code>last_commit</code>: Retrieves the last commit from the log.</li><li><code>git_log</code>: Retrieves the log of all commits.</li><li><code>tag</code>: Retrieves the tag for the repository.</li></ul></li></ul><p><strong>Suggested Medium Complexity Resources to Start With:</strong></p><ul><li><p><strong>File Resource</strong></p><ul><li><code>owner</code>: Tests if the owner of the file matches the specified value.</li><li><code>group</code>: Tests if the group to which a file belongs matches the specified value.</li><li><code>size</code>: Tests if a file’s size matches, is greater than, or is less than the specified value.</li><li><code>contents</code>: Tests if contents in the file match the value specified in a regular expression.</li><li><code>path</code>: Retrieves the path to the file.</li></ul></li><li><p><strong>Directory Resource</strong></p><ul><li><code>owner</code>: Tests if the owner of the directory matches the specified value.</li><li><code>group</code>: Tests if the group to which a directory belongs matches the specified value.</li><li><code>size</code>: Tests if a directory’s size matches, is greater than, or is less than the specified value.</li><li><code>contents</code>: Tests if contents in the directory match the value specified in a regular expression.</li><li><code>path</code>: Retrieves the path to the directory.</li></ul></li><li><p><strong>Users</strong></p><ul><li><code>exist</code>: Tests if the named user exists.</li><li><code>gid</code>: Tests the group identifier.</li><li><code>group</code>: Tests the group to which the user belongs.</li><li><code>groups</code>: Tests if the user belongs to two (or more) groups.</li><li><code>home</code>: Tests the home directory path for the user.</li><li><code>maxdays</code>: Tests the maximum number of days between password changes.</li><li><code>mindays</code>: Tests the minimum number of days between password changes.</li><li><code>shell</code>: Tests the path to the default shell for the user.</li><li><code>uid</code>: Tests the user identifier.</li><li><code>warndays</code>: Tests the number of days a user is warned before a password must be changed.</li></ul></li><li><p><strong>etc/hosts.allow and etc/hosts.deny</strong></p><ul><li><code>daemon</code>: Returns a string containing the daemon that is allowed in the rule.</li><li><code>client_list</code>: Returns a 2D string array where each entry contains the clients specified for the rule.</li><li><code>options</code>: Returns a 2D string array where each entry contains any options specified for the rule.</li></ul></li></ul><p><strong>Suggested Hard Resources to Start With:</strong></p><ul><li><p><strong>etc/shadow</strong></p><ul><li><code>users</code>: A list of strings representing the usernames matched by the filter.</li><li><code>passwords</code>: A list of strings representing the encrypted password strings for entries matched by the filter. Each string may not be an encrypted password but rather a <code>*</code> or similar, indicating that direct logins are not allowed.</li><li><code>last_changes</code>: A list of integers indicating the number of days since Jan 1, 1970, since the password for each matching entry was changed.</li><li><code>min_days</code>: A list of integers reflecting the minimum number of days a password must exist before it may be changed for the users that matched the filter.</li><li><code>max_days</code>: A list of integers reflecting the maximum number of days after which the password must be changed for each user matching the filter.</li><li><code>warn_days</code>: A list of integers reflecting the number of days a user is warned about an expiring password for each user matching the filter.</li><li><code>inactive_days</code>: A list of integers reflecting the number of days a user must be inactive before the user account is disabled for each user matching the filter.</li><li><code>expiry_dates</code>: A list of integers reflecting the number of days since Jan 1, 1970, that a user account has been disabled for each user matching the filter. The value is <code>nil</code> if the account has not expired.</li><li><code>count</code>: Tests the number of records that the filter matched.</li></ul></li><li><p><strong>etc/fstab</strong></p><ul><li><code>device_name</code>: The name associated with the device.</li><li><code>mount_point</code>: The directory at which the file system is configured to be mounted.</li><li><code>file_system_type</code>: The type of file system of the device or partition.</li><li><code>mount_options</code>: The options for the device or partition.</li><li><code>dump_options</code>: A number used by dump to decide if a file system should be backed up.</li><li><code>file_system_options</code>: A number that specifies the order the file system should be checked.</li></ul></li><li><p><strong>Tomcat Server Configuration Reader</strong></p><ul><li><code>parse_conf</code>: Parses the configuration file.</li><li><code>fetch_connectors</code>: Retrieves keys such as <code>port</code>, <code>protocol</code>, <code>timeout</code>, <code>redirect</code>, <code>sslprotocol</code>, <code>scheme</code>, <code>sslenable</code>, <code>clientauth</code>, and <code>secure</code>.</li></ul></li></ul>",7)])])}const a=t(r,[["render",c]]),h=JSON.parse('{"path":"/courses/advanced/07.html","title":"7. Exercise - Develop Your Own Resources","lang":"en-US","frontmatter":{"order":7,"next":"08.md","title":"7. Exercise - Develop Your Own Resources","author":"Aaron Lippold","headerDepth":3,"toc":{"levels":[2,5]},"description":"In this exercise, you will practice writing your own resources and consider how you could implement them in a profile. Suggested Simple Resources to Start With: Docker id: Retri...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. Exercise - Develop Your Own Resources\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-04T16:54:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/advanced/07.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"7. Exercise - Develop Your Own Resources"}],["meta",{"property":"og:description","content":"In this exercise, you will practice writing your own resources and consider how you could implement them in a profile. Suggested Simple Resources to Start With: Docker id: Retri..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-04T16:54:00.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-04T16:54:00.000Z"}]]},"git":{"createdTime":1656449910000,"updatedTime":1733331240000,"contributors":[{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":4},{"name":"wdower","username":"wdower","email":"57142072+wdower@users.noreply.github.com","commits":1,"url":"https://github.com/wdower"},{"name":"Will Dower","username":"","email":"wdow95@hotmail.com","commits":1},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":2}]},"readingTime":{"minutes":2.37,"words":710},"filePathRelative":"courses/advanced/07.md","autoDesc":true}');export{a as comp,h as data};
