import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as i,a as l,e as s,d as h,w as r,r as o,o as p}from"./app-Cw6QY_M_.js";const d="/saf-training/assets/runner-D9AbGacK.png",c={};function k(u,e){const t=o("RouteLink");return p(),n("div",null,[e[3]||(e[3]=i("h2",{id:"_6-1-how-to-run-inspec",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_6-1-how-to-run-inspec"},[i("span",null,"6.1 How to Run InSpec")])],-1)),i("p",null,[e[1]||(e[1]=s("In this section, we will discuss how to run InSpec. In ",-1)),h(t,{to:"/courses/user/08.html"},{default:r(()=>[...e[0]||(e[0]=[s("Section 8",-1)])]),_:1}),e[2]||(e[2]=s(", you will put this into practice!",-1))]),e[4]||(e[4]=l(`<h2 id="_6-2-requirements" tabindex="-1"><a class="header-anchor" href="#_6-2-requirements"><span>6.2 Requirements</span></a></h2><p>To run InSpec, you must have:</p><ol><li><strong>The InSpec Executable</strong> - InSpec&#39;s executable must be installed on the machine running the scans. This does not have to be the same machine that is being tested! <em>(We will run InSpec from the GitHub Codespaces lab environment. InSpec is already downloaded in the GitHub Codespaces lab environment after running the install script using <code>source build-lab.sh</code>.)</em> Check out the <a href="../../installation">Installation Tab</a> for more information on installing InSpec in a different environment.</li><li><strong>A Target</strong> - You need something to test! <em>In the GitHub Codespaces lab environment, we have two Docker containers running to test.</em></li><li><strong>An InSpec Profile</strong> - You need the tests themselves! This is Ruby code containing all of the controls, or tests, that we intend to run against the target. You may have this code stored locally on your runner machine, or you may get it from any accessible network location -- GitHub is an excellent example. We will practice running profiles from local files and from a GitHub repository.</li></ol><h2 id="_6-3-the-inspec-command-formula" tabindex="-1"><a class="header-anchor" href="#_6-3-the-inspec-command-formula"><span>6.3 The InSpec Command Formula</span></a></h2><p>To validate a system, we need to run InSpec from the command line. There are many different options we can use with the InSpec executable to run our tests. Let&#39;s break down the simple formula based on the requirements above.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">profil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">targe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">--more-flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">report</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> types</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (json, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cli,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yaml,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etc.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHERE_IS_THE_PROFILE</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 6.3.1 &amp; 6.3.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHAT_IS_THE_TARGET</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--more-flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EXTRA_STUFF</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHAT_SHOULD_INSPEC_DO_WITH_THE_RESULTS</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-1-start-with-inspec-exec-required" tabindex="-1"><a class="header-anchor" href="#_6-3-1-start-with-inspec-exec-required"><span>6.3.1 Start with <code>inspec exec</code> (required)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We&#39;ll start with <code>inspec exec</code> so that the InSpec executable knows what we are asking it to do -- in this case, <code>inspec exec</code> tells InSpec to execute an existing profile. (There are other options, like <code>inspec shell</code> and <code>inspec profile init</code>, but they are not our focus right now. We&#39;ll look at some of them during other MITRE SAF training classes.)</p><h3 id="_6-3-2-where-is-the-profile-required" tabindex="-1"><a class="header-anchor" href="#_6-3-2-where-is-the-profile-required"><span>6.3.2 WHERE_IS_THE_PROFILE (required)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHERE_IS_THE_PROFILE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then, you must give the <em>location</em> of the InSpec profile. In other words, we need to show the InSpec executable where to find the code for the tests themselves. If the InSpec profile is stored locally, you can simply write out the path to that file location, such as <code>/root/path/to/InSpecProfiles/nginx-profile</code>. If you wish to run a profile directly from GitHub or some other location on the Internet or other network, you can enter the URL of the profile instead, such as <code>https://github.com/mitre/nginx-stigready-baseline</code>.</p><h3 id="_6-3-3-what-is-the-target-default-local-machine" tabindex="-1"><a class="header-anchor" href="#_6-3-3-what-is-the-target-default-local-machine"><span>6.3.3 WHAT_IS_THE_TARGET (default: local machine)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHAT_IS_THE_TARGET</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Next, you need to tell your computer what the target is -- or rather, what system we are trying to test. You add this information using the <code>-t</code> flag.</p><p>Without the <code>-t</code> flag, by default, InSpec will execute the selected profile against your local system. However, we are often trying to run tests against a remote target. You could test a bare metal server, a virtual machine, a Docker container, and many others. You can specify different protocols to connect to your remote system using SSH, WinRM, and more. For example, we could connect to a system using <code>-t ssh://user-name@host-name:port</code> or <code>-t docker://instance-id</code>. We will talk more about these options later.</p><h3 id="_6-3-4-extra-stuff-optional" tabindex="-1"><a class="header-anchor" href="#_6-3-4-extra-stuff-optional"><span>6.3.4 EXTRA_STUFF (optional)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--more-flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EXTRA_STUFF</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>There are many more options that you can specify when running the InSpec command. For example, <code>--enhanced-outcomes</code> is used to show additional context when results are displayed in the CLI reporter. Additionally, inputs can be included for your profile using the <code>--inputs</code> or <code>--input-file</code> flags. For example, <code>--input-file /path/to/inputs.yml</code> allows you to add inputs that tailor your test profile to your environment&#39;s particular configuration. You can find more information on inputs in the <a href="./07">Tailoring Inputs</a> section.</p><h3 id="_6-3-5-what-should-inspec-do-with-the-results-default-cli" tabindex="-1"><a class="header-anchor" href="#_6-3-5-what-should-inspec-do-with-the-results-default-cli"><span>6.3.5 WHAT_SHOULD_INSPEC_DO_WITH_THE_RESULTS (default: cli)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WHAT_SHOULD_INSPEC_DO_WITH_THE_RESULTS</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 6.3.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And of course, once our test has been completed, you probably want to see the results! You can specify where those results are displayed or saved based on what you enter after the <code>--reporter</code> flag at the end of your command. For example, the following would print the results on the command line and save it to a file (by creating or overwriting) the file at /path/to/results.json: <code>--reporter cli json:/path/to/results.json</code>. If you do not add this information, the command will default to providing results on the command line, but it will not save those into a file unless you specify the <code>--reporter</code> flag like the example.</p><p>Each profile&#39;s README should give an example of running the InSpec command for that profile; however, you can always reference the complete documentation on the InSpec command options <a href="https://docs.chef.io/inspec/cli/" target="_blank" rel="noopener noreferrer">here</a>.</p><details class="hint-container details"><summary>Want to give it a try?</summary><p>We will go more in depth on this example in the next two sections, but if you want a head start, you can give running InSpec a try by running this command in your Codespace terminal.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mitre/nginx-stigready-baseline</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker://nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --enhanced-outcomes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cli</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>In the above example, we are testing an NGINX server. We get the InSpec profile (all the tests) from GitHub by stating <code>https://github.com/mitre/nginx-stigready-baseline</code>. We use the NGINX target (<code>-t</code>) that is running via Docker in our Codespace environment by stating <code>docker://nginx</code>, and we report the results to the terminal (CLI output) with <code>enhanced-outcomes</code> enabled for readability. Not all the metadata generated by <code>inspec exec</code> is displayed in the CLI output. Instead, it is included in the results file so that we can explore it in more detail using Heimdall.</p><p><em>Note: The first time you run InSpec, it will likely ask you to accept Chef&#39;s license like this:</em></p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            Chef</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> License</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Acceptance</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Before</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> can</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> continue,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> product</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> license</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">must</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> accepted.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> View</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> license</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://www.chef.io/end-user-license-agreement/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">License</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> need</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> accepting:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Chef</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> InSpec</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Do</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> accept</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> product</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (yes/no)?</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can type <code>yes</code> and press enter. This will only happen one time.</p><p>If you are using InSpec in a pipeline, you can silently accept the license. Refer to <a href="https://docs.chef.io/licensing/accept/" target="_blank" rel="noopener noreferrer">Chef&#39;s documentation</a> for more information.</p></details><details class="hint-container details"><summary>Transports - Advanced Examples</summary><p>The <code>-t</code> flag (or <code>--target</code> flag in long form) specifies <strong>what</strong> target you want InSpec to scan. <strong>How</strong> you connect to that target is via a transport. Transports use standard ports and protocols. Some examples are SSH, WinRM, AWS SSM, Docker, and the Kubernetes API.</p><h3 id="containers-docker-transport" tabindex="-1"><a class="header-anchor" href="#containers-docker-transport"><span>Containers (docker transport)</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mitre/nginx-stigready-baseline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker://instance_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  --input-file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">path_to_your_input_file/name_of_your_input_file.ym</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">path_to_your_output_file/name_of_your_output_file.jso</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ssh-transport" tabindex="-1"><a class="header-anchor" href="#ssh-transport"><span>SSH Transport</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">inspec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mitre/nginx-stigready-baseline</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssh://Username:Password@IP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  --input-file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">path_to_your_input_file/name_of_your_input_file.ym</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  --reporter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">path_to_your_output_file/name_of_your_output_file.jso</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">Defaults</p><p>Note that if you do not provide one of the required flags in the InSpec exec command, there is default behavior.</p><table><thead><tr><th>Missing Flag</th><th>Default Behavior</th></tr></thead><tbody><tr><td>No target (-t or --target)</td><td>Uses your local machine (where InSpec is running) as the target.</td></tr><tr><td>No --reporter flag</td><td>Prints results to the terminal on the InSpec runner machine</td></tr></tbody></table></div><h2 id="_6-4-how-to-deploy-inspec" tabindex="-1"><a class="header-anchor" href="#_6-4-how-to-deploy-inspec"><span>6.4 How to Deploy InSpec</span></a></h2><p>It is intended and recommended that InSpec be installed on a &quot;runner&quot; host (such as a DevOps orchestration server, an administrative management system, or a developer&#39;s workstation/laptop) and run against the target remotely. However, InSpec may be deployed in <a href="https://saf.mitre.org/faq/7" target="_blank" rel="noopener noreferrer">various ways</a> depending on the needs of the user:</p><figure><img src="`+d+'" alt="Running InSpec" tabindex="0" loading="lazy"><figcaption>Running InSpec</figcaption></figure>',30))])}const y=a(c,[["render",k]]),A=JSON.parse('{"path":"/courses/user/06.html","title":"6. How to Run InSpec","lang":"en-US","frontmatter":{"order":6,"next":"07.md","title":"6. How to Run InSpec","author":"Aaron Lippold","headerDepth":3,"toc":{"levels":[2,5]},"description":"6.1 How to Run InSpec In this section, we will discuss how to run InSpec. In , you will put this into practice! 6.2 Requirements To run InSpec, you must have: The InSpec Executa...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6. How to Run InSpec\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-09T04:42:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Lippold\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/saf-training/saf-training/courses/user/06.html"}],["meta",{"property":"og:site_name","content":"MITRE SAF Training"}],["meta",{"property":"og:title","content":"6. How to Run InSpec"}],["meta",{"property":"og:description","content":"6.1 How to Run InSpec In this section, we will discuss how to run InSpec. In , you will put this into practice! 6.2 Requirements To run InSpec, you must have: The InSpec Executa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-09T04:42:43.000Z"}],["meta",{"property":"article:author","content":"Aaron Lippold"}],["meta",{"property":"article:modified_time","content":"2024-12-09T04:42:43.000Z"}]]},"git":{"createdTime":1656525471000,"updatedTime":1733719363000,"contributors":[{"name":"Emily Rodriguez","username":"","email":"ecrodriguez@mm279976-pc.lan","commits":15},{"name":"wdower","username":"wdower","email":"will@dower.dev","commits":2,"url":"https://github.com/wdower"},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":2},{"name":"Shivani Karikar","username":"","email":"karikarshivani@gmail.com","commits":2},{"name":"Will","username":"Will","email":"will@dower.dev","commits":1,"url":"https://github.com/Will"},{"name":"dependabot[bot]","username":"dependabot[bot]","email":"49699333+dependabot[bot]@users.noreply.github.com","commits":1,"url":"https://github.com/dependabot[bot]"},{"name":"p-oneil","username":"p-oneil","email":"poneil@mitre.org","commits":2,"url":"https://github.com/p-oneil"}]},"readingTime":{"minutes":4.24,"words":1271},"filePathRelative":"courses/user/06.md","autoDesc":true}');export{y as comp,A as data};
